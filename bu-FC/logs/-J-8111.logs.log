do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000220060348511
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.19752502441e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.89029693604e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
executed snippet estimated_duration=0.0, duration=0.00235295295715
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000134944915771
executed snippet estimated_duration=4.0, duration=0.00120496749878
Script duration 556.0
Run total estimated duration= 557.000
run duration: 0:09:17
doing event level: 2
09:15:27 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4954669808
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-8111
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-8111
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
09:15:27 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.07031,0.11677,-0.05153,-0.04852,-0.06484,0.00253
09:15:27 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:15:28 -- ******* Pre Extraction Check Passed *******
=================================================================================
09:15:28 -- stopping status monitor
stop 4941520432
Status monitor stopped
09:15:29 -- starting status monitor
start 4941520432
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 09:15:31.024279
Extraction Started jan_co2.py
09:15:31 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x1295fa770>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.79221343994e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.98838043213e-05
executed snippet estimated_duration=120.0, duration=0.00211381912231
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.00543212891e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0177640914917
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.51290130615e-05
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=15
09:15:31 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=15
09:15:31 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
syncing queue meta
sync queue to factory username>>MHeizler
update queue email=matthew.heizler@nmt.edu
Autosaving to /Users/jan/PychronDev/experiments/auto_save/CO2Blanks.bak
update queue username=MHeizler
sync queue to factory mass_spectrometer>>Jan
sync queue to factory extract_device>>Fusions CO2
sync queue to factory email>>matthew.heizler@nmt.edu
sync queue to factory use_email>>True
sync queue to factory load_name>>1785
update queue load_name=1785
sync queue to factory delay_before_analyses>>5
sync queue to factory delay_between_analyses>>45
sync queue to factory username>>MHeizler
run factory set mass spec Jan
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=15
09:15:32 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=15
09:15:33 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=15
09:15:34 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=15
09:15:35 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000144004821777
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.8835067749e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.01222229004e-05
executed snippet estimated_duration=0.0, duration=0.00186491012573
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000128984451294
executed snippet estimated_duration=4.0, duration=0.000988006591797
unknown400_120 in script context. using previous estimated duration
pump_ms in script context. using previous estimated duration
co2 in script context. using previous estimated duration
pump_extraction_line in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.69548797607e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.20295715332e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00189113616943
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.69820404053e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.60691070557e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=8.39233398438e-05
executed snippet estimated_duration=250.0, duration=0.0115699768066
sniffair_x2 in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.81469726562e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=7.58171081543e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.29696655273e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.3882598877e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=7.79628753662e-05
executed snippet estimated_duration=108.0, duration=0.00555515289307
cocktail_x1 in script context. using previous estimated duration
check queue CO2Blanks
saving experiment to /Users/jan/PychronDev/experiments/CO2Blanks.txt
setting executable True
queues saved
Queue modified. Reset run generator
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=15
09:15:35 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=15
09:15:36 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=15
09:15:36 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.96350693703
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '') {}
setting motor "beam" to 
is blank. not heating
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=15
09:15:37 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0977480412
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0776650906
executed snippet estimated_duration=180.0, duration=66.6372549534
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 218
Extraction Finished
09:16:37 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
09:16:37 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     6.0567 5.8801 5.9937 6.1952 6.2317 6.6805
Ar39     6.0116 5.7711 6.0578 6.3383 6.1144 6.5670
Ar36     5.6891 5.4401 5.7212 5.9972 5.7694 6.2181
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bu-FC-J analysis type=blank_unknown
Measurement Started jan_unknown400_120.py
09:16:38 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.096344
GetGain L1 ===>> 0.010749
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.258926936459
GetParameter Source Current Readback ===>> 551.684978331197
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
testing...
no interpolation path defined
executed snippet estimated_duration=568.532928, duration=0.000149965286255
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03072323e+00]
H1 map mass to dac 39.9624 >> 5.88013
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.88009537247) on H1
setting magnet DAC
current  : 5.880096
requested: 5.880095
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88009537247 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
09:16:38 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=15
09:16:39 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1649644d0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x185076290>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x15fb586b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=15
09:16:42 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
09:16:54 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=15
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=15
09:16:55 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
09:16:55 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000174999237061
refresh_canvas_needed fired
executed snippet estimated_duration=4.0, duration=0.00962591171265
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00014591217041
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.691
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
measuring signal. ncounts=400
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=15
09:16:56 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
starting measurement
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=15
09:16:56 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=15
09:16:58 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=15
09:16:59 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=15
09:16:59 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=15
09:17:00 -- OPEN   VALVE-T (Microbone to CO2 Laser)
testing H1<-5.0
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=15
09:17:01 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.92595291138
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.9653570652
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
09:17:02 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:17:21 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:17:47 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:18:14 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:18:40 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:19:06 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:19:33 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:19:59 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:20:25 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:20:51 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:21:18 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:21:44 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:22:10 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:22:36 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:23:03 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:23:29 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1135350440606154}"
09:23:55 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.347
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03072323e+00]
H1 map mass to dac 34.2 >> 5.24224160773
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.24221073666) on H1
setting magnet DAC
current  : 5.880095
requested: 5.242211
Delta Dac: 0.637885
Checking detector protection. dv=0.63788
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.24221073666 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05227823001523475}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.04843010344014962}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07365293609611838}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06398169174964717}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07041589740238356}"
09:24:40 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07417739170457516}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07851236126423089}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08000546002954027}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07792125295156481}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07653178598624429}"
09:25:06 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07480353048558788}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07489114901996641}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07689329139174632}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07755131467668964}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07591492460019472}"
09:25:32 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0741398050707988}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07403747113988732}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07399521926426235}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07399366786996542}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07476222592886002}"
09:25:59 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07459054956631304}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07385520512545904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07443047798316012}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07571394631234596}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.137
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=3.62251893199 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x170c86bf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x1321c1e90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x170c86bf0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x1321c1e90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x17072def0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x1321c1e90>]
setting integration time = 0.524288
SetIntegrationTime 0.524288 ===>> OK
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [ -3.11428344e-04   1.33794662e-01   1.03072323e+00]
H1 map mass to dac 39.9624 >> 5.88013
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x137c0dd10>
doing pc
starting peak center. center dac= 5.88009537247 step_width=0.001
width = 0.001
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.88010 width=0.03000 (5.86510 - 5.89510)
Moving to starting dac 5.86509537247
setting magnet DAC
current  : 5.242211
requested: 5.865095
Delta Dac: 0.622885
Checking detector protection. dv=0.62288
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86509537247 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0796861400611. timeout= 10
Peak center baseline intensity achieved
_do_sweep sm= 5.86509537247, em= 5.89509537247, stm= 0.001
calculated step values: start=5.86509537247, end=5.89509537247, width=0.001, nsteps=31.0
setting magnet DAC
current  : 5.865095
requested: 5.865095
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86509537247 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.865095
requested: 5.866130
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86612985522 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866130
requested: 5.867164
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86716433798 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867164
requested: 5.868199
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86819882074 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868199
requested: 5.869233
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8692333035 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869233
requested: 5.870268
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87026778626 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870268
requested: 5.871302
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87130226902 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871302
requested: 5.872337
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87233675178 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872337
requested: 5.873371
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87337123453 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873371
requested: 5.874406
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87440571729 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874406
requested: 5.875440
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87544020005 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875440
requested: 5.876475
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87647468281 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876475
requested: 5.877509
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87750916557 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877509
requested: 5.878544
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87854364833 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878544
requested: 5.879578
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87957813109 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879578
requested: 5.880613
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88061261385 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.880613
requested: 5.881647
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8816470966 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881647
requested: 5.882682
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88268157936 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882682
requested: 5.883716
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88371606212 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883716
requested: 5.884751
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88475054488 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884751
requested: 5.885785
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88578502764 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885785
requested: 5.886820
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8868195104 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886820
requested: 5.887854
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88785399316 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887854
requested: 5.888888
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88888847591 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888888
requested: 5.889923
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88992295867 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889923
requested: 5.890957
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89095744143 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890957
requested: 5.891992
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89199192419 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.891992
requested: 5.893026
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89302640695 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.893026
requested: 5.894061
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89406088971 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.894061
requested: 5.895095
Delta Dac: 0.001034
Checking detector protection. dv=0.00103
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89509537247 ===>> OK
Magnet settling time: 1.049 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8714380578365599, 5.8792536890990847, 5.8870693203616096], [3.3700388376457751, 4.6080989010046673, 3.4253405697372745], 5.8845743303816507, 4.6080989010046673)
Failed to find a valid peak. No peak greater than 1.0. max = 0.248935076075
Failed to find a valid peak. No peak greater than 1.0. max = 0.132911612499
Failed to find a valid peak. No peak greater than 1.0. max = 0.0146441371359
new center pos Detector(H1) (Ar40) @ 5.8792536891
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87928831168
update mftable H1 Ar40 5.87928831168 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.895095
requested: 5.879254
Delta Dac: 0.015842
Checking detector protection. dv=0.01584
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.8792536891 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
Failed to find a valid peak. No peak greater than 1.0. max = 0.248935076075
Failed to find a valid peak. No peak greater than 1.0. max = 0.132911612499
Failed to find a valid peak. No peak greater than 1.0. max = 0.0146441371359
flush and close file /Users/jan/PychronDev/data/isotopes/1c/798a40-2dc5-4e40-b95d-aa1368b3f026.h5
finished measure script
executed snippet estimated_duration=568.532928, duration=619.840373993
jan_unknown400_120.py completed successfully
Measurement Finished
09:26:58 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
09:26:58 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.28881835938e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=15
09:26:58 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.387845039368
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
09:26:58 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
not connected to db mysql://janexp@129.138.12.160/labspy
Enviromentals: {'lab_humiditys': [{'device': 'EnvironmentalMonitor',
                    'name': 'Lab Hum.',
                    'pub_date': '2017-07-01T09:18:00',
                    'title': 'iServer Hum.',
                    'value': 49.1}],
 'lab_pneumatics': [{'device': 'AirPressure',
                     'name': 'Pressure',
                     'pub_date': '2017-07-01T09:25:52',
                     'title': None,
                     'value': 101.25},
                    {'device': 'AirPressure2',
                     'name': 'Pressure2',
                     'pub_date': '2017-07-01T09:25:52',
                     'title': None,
                     'value': 102.92932}],
 'lab_temperatures': []}
persistence save...
persistence save - db
post measurement save
6135608528 connecting to database sqlite://@/
connected to db sqlite://@/
create new session 6135608528
close session 6135608528
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5407783440
MassSpec Database Version: 16.0
close session 5407783440
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FC-J
setting aliquot to 8111
setting step to 
setting uuid to 1c798a40-2dc5-4e40-b95d-aa1368b3f026
setting irradpos to bu-FC-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 218
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e2563d0> len t=120
baseline Ar41. v=-0.0884709059211, e=0.00285809327422
get signal data Ar41 H2
Get data signal Ar41 0.0114+/-0.0033 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e256590> len t=120
baseline Ar40. v=0.0753995572548, e=0.00372959150147
get signal data Ar40 H1
Get data signal Ar40 0.744+/-0.007 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e256750> len t=120
baseline Ar39. v=-0.0616159372527, e=0.00471641300096
get signal data Ar39 AX
Get data signal Ar39 0.021+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e256910> len t=120
baseline Ar38. v=-0.037630867998, e=0.00209422691303
get signal data Ar38 L1
Get data signal Ar38 0.0034+/-0.0024 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e256ad0> len t=120
baseline Ar37. v=-0.0257222253413, e=0.0040641166088
get signal data Ar37 L2
Get data signal Ar37 0.062+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x13e256c90> len t=120
baseline Ar36. v=6.19572328531e-06, e=2.72384537507e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00488+/-0.00017 len t=400
bu-FC-J-8111 added analysis time 0.763467073441s
analysis added to mass spec database
mass spec save time= 0.790
persistence save - dvc
================= post measurement started
create new session 4941098640
Traceback (most recent call last):
  File "/Users/jan/Programming/git/pychron_dev/pychron/database/core/database_adapter.py", line 747, in __retrieve
    return q.one()
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2361, in one
    ret = list(self)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2404, in __iter__
    return self._execute_and_instances(context)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/orm/query.py", line 2419, in _execute_and_instances
    result = conn.execute(querycontext.statement, self._params)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 720, in execute
    return meth(self, multiparams, params)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/sql/elements.py", line 317, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 817, in _execute_clauseelement
    compiled_sql, distilled_params
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 947, in _execute_context
    context)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1108, in _handle_dbapi_exception
    exc_info
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/util/compat.py", line 185, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 940, in _execute_context
    context)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/sqlalchemy/engine/default.py", line 435, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/pymysql/cursors.py", line 146, in execute
    result = self._query(query)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/pymysql/cursors.py", line 296, in _query
    conn.query(q)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/pymysql/connections.py", line 780, in query
    self._execute_command(COMMAND.COM_QUERY, sql)
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/pymysql/connections.py", line 970, in _execute_command
    self._write_bytes(prelude + sql[:chunk_size-1])
  File "/Users/jan/anaconda/envs/pychron_env/lib/python2.7/site-packages/pymysql/connections.py", line 929, in _write_bytes
    raise err.OperationalError(2006, "MySQL server has gone away (%r)" % (e,))
OperationalError: (OperationalError) (2006, "MySQL server has gone away (error(32, 'Broken pipe'))") 'SELECT `RepositoryTbl`.name AS `RepositoryTbl_name`, `RepositoryTbl`.`principal_investigatorID` AS `RepositoryTbl_principal_investigatorID` \nFROM `RepositoryTbl` \nWHERE `RepositoryTbl`.name = %s' ('laboratory',)

close session 4941098640
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.248935076075
Failed to find a valid peak. No peak greater than 1.0. max = 0.132911612499
Failed to find a valid peak. No peak greater than 1.0. max = 0.0146441371359
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-8111.json
add to repo msg=modified - -J-8111.dat.json
add to repo msg=modified - -J-8111.blan.json
add to repo msg=modified - -J-8111.inte.json
add to repo msg=modified - -J-8111.icfa.json
add to repo msg=modified - -J-8111.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/bu-FC/tags/-J-8111.tags.json
add to repo msg=modified - -J-8111.peak.json
add to repo msg=modified - -J-8111.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/bu-FC/monitor/-J-8111.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-8111.inte.json
add to repo msg=modified - -J-8111.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-8111.blan.json
commit message=<BLANKS> preceding bc-02-J-685
add to repo msg=modified - -J-8111.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x19b6b90b0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4941098640
add association laboratory
get identifier "bu-FC-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x183f43190>
close session 4941098640
================= post measurement finished
09:27:20 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
09:27:20 -- ******* Post Run Check Passed *******
09:27:20 -- Automated run bu-FC-J-8111 success duration: 712.953 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=bu-FC-J-8111, duration=712.953231812, md5=4c9e8ecc
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CO2Blanks.rem.txt
/Users/jan/PychronDev/experiments/rem/CO2Blanks.ex.txt
doing event level: 3
add run
