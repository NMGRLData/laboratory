do run
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 133.8
script duration name:ic_peak_hop3 seconds:134.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 4.0
calculate duration
testing...
no interpolation path defined
executed 36.0
executed 106.0
script duration name:air_x1 seconds:106.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 240.0
Run total estimated duration= 241.000
run duration: 0:04:01
doing event level: 2
13:48:18 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 5009230064
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ic-01-J-65
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ic-01-J-65
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
No metadata section in "jan_ic_peak_hop3.py". Using default "None" value for "default_fits"
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
13:48:18 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> H2,-0.173037664758866,H1,-0.00494089747327102,AX,-0.031901651464755,L1,0.00947096799246973,L2,-0....
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.17304,-0.00494,-0.03190,0.00947,-0.00731,0.03498
13:48:18 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
13:48:18 -- ******* Pre Extraction Check Passed *******
=================================================================================
13:48:18 -- stopping status monitor
stop 5031116048
Alive clients [4981923568]
13:48:18 -- starting status monitor
start 5031116048
Monitor already running
start extraction
do extraction
Analysis started at 13:48:18.785635
Extraction Started jan_air_x1.py
13:48:18 -- ******* Extraction Started jan_air_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12c71c950>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 4.0
calculate duration
testing...
no interpolation path defined
executed 36.0
executed 106.0
Jan Air Script x1
doing GOSUB
testing...
no interpolation path defined
executed 0
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed 0
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 0
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetValveState R ===>> False
change switch state (False, False)
---------------------------------------- close None (Jan Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Jan Ion Pump'}
opening name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetValveState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
13:48:19 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open None (Jan Ion Pump) result=[(True, True)], time=0.09 sec
locked=[False]
close () {'description': 'Minibone to Bone'}
closing name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetValveState I ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Bone) result=[(False, False)]
locked=[False]
close () {'description': 'Bone to Minibone'}
closing name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetValveState E ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Minibone) result=[(False, False)]
locked=[False]
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
close () {'description': 'Quad Inlet'}
closing name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetValveState Q ===>> False
change switch state (False, False)
---------------------------------------- close None (Quad Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetValveState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
13:48:20 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.14 sec
set states for children of I. state=False
set states for children of Q. state=False
set states for children of P. state=False
handle state [('I', False), ('Q', False), ('P', False)]
update switch state I False args=() kw={'refresh': True} ncanvase=2
update switch state Q False args=() kw={'refresh': True} ncanvase=2
update switch state P False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: 1135772522
locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetValveState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
13:48:21 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.40 sec
locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetValveState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
13:48:21 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.40 sec
locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
13:48:22 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.13 sec
locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
closing name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
set states for children of T. state=False
handle state [('T', False)]
update switch state T False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetValveState T ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to CO2 Laser) result=[(False, False)]
locked=[False]
executed 0
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 32.0
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Minibone'}
opening name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetValveState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
13:48:23 -- OPEN   VALVE-L (Microbone to Minibone)
---------------------------------------- open None (Microbone to Minibone) result=[(True, True)], time=0.44 sec
locked=[False]
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
Get Checksum: 365063141
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
13:48:25 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.13 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -875228829
Get Checksum: -875228829
Get Checksum: -875228829
Get Checksum: -875228829
Join finished
block finished. duration 15.0440268517
executed 48.0
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
Get Checksum: 365063141
State checksums do not match. Local:-875228829 Remote:365063141
State checksum failed
filling air pipette
open () {'description': 'Inner Pipette 2'}
opening name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
interlocked Y
Software Interlock. VALVE-Y is OPEN!. Will not open Z
change switch state (False, False)
---------------------------------------- open None (Inner Pipette 2) result=[(False, False)], time=0.00 sec
locked=[False]
Failed to open valve None Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
interlocked Y
Software Interlock. VALVE-Y is OPEN!. Will not open Z
change switch state (False, False)
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Join finished
block finished. duration 15.0411319733
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
executed 51.0
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
closing name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetValveState U ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to Turbo) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
13:48:58 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.15 sec
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Get Checksum: 1314755832
Join finished
block finished. duration 2.01120305061
open () {'description': 'Microbone to Minibone'}
opening name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetValveState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
13:49:00 -- OPEN   VALVE-L (Microbone to Minibone)
---------------------------------------- open None (Microbone to Minibone) result=[(True, True)], time=0.42 sec
locked=[False]
executed 6.0
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 36.0
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Get Checksum: 1314755832
Join finished
block finished. duration 2.00425601006
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
13:49:03 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.13 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Join finished
block finished. duration 15.0340139866
sleep (1,) {}
SLEEP 1.0
executed 54.0
ExpandPipette2.py completed successfully
gosub finished
executed 106.0
jan_air_x1.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
create new session 4980666544
close session 4980666544
Extraction Finished
13:49:19 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
13:49:19 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.370811206739
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.7746 5.8826 5.9958 6.1106 6.2318 6.3428
Ar39     5.6739 5.7752 5.8882 6.0006 6.1195 6.2293
Ar36     5.3514 5.4441 5.5515 5.6595 5.7745 5.8804
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ic-01-J analysis type=detector_ic
Measurement Started jan_ic_peak_hop3.py
13:49:19 -- ******* Measurement Started jan_ic_peak_hop3.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.096713
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.094844
GetGain CDD ===>> 0
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/49/2db0c7-fdfb-40eb-8f74-646dd6c6d16b.h5
flush and close file /Users/jan/PychronDev/data/isotopes/49/2db0c7-fdfb-40eb-8f74-646dd6c6d16b.h5
testing...
no interpolation path defined
setting detector H2 to PM41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
setting detector H2 to PM41 (40.964)
setting detector H1 to Ar40 (39.964)
setting detector AX to Ar39 (38.964)
setting detector L1 to Ar38 (37.964)
setting detector L2 to Ar37 (36.964)
setting detector CDD to Ar36 (35.964)
setting detector H2 to PM41 (40.9668)
setting detector H1 to Ar40 (39.9668)
setting detector AX to Ar39 (38.9668)
setting detector L1 to Ar38 (37.9668)
setting detector L2 to Ar37 (36.9668)
setting detector CDD to Ar36 (35.9668)
executed 183.8
unknown measurement script
load_hops ('hops/ic3_hops.yaml',) {}
[{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}]
define_hops ([{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}],) {}
*************** Set Analysis View Ar/Ar
equilibrate () {'delay': 3.0, 'inlet': 'R', 'outlet': 'O', 'eqtime': 25.0}
Equilibration Started
13:49:20 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetValveState O ===>> False
change switch state (False, False)
waiting 3.0s before opening inlet value ('R',)
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: -1739560716
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
Get Checksum: -1683019534
State checksums do not match. Local:-1739560716 Remote:-1683019534
State checksum failed
GetValveState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=2
13:49:23 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 25.0sec
sleep (24.0,) {}
SLEEP 24.0
block started
WaitControl setup for 24.0  
Get Checksum: -1683019534
Get Checksum: -1683019534
Get Checksum: -1683019534
Get Checksum: -1683019534
Get Checksum: -1683019534
Get Checksum: -1683019534
Get Checksum: -1683019534
Join finished
block finished. duration 24.0663731098
set_fits ('Ar40H1:parabolic', 'Ar40AX:parabolic', 'Ar40L2:parabolic') {}
set "Ar40H1" to "parabolic"
set "Ar40AX" to "parabolic"
set "Ar40L2" to "parabolic"
set_baseline_fits ('average_SEM',) {}
set "H1" to "average_SEM"
set "AX" to "average_SEM"
set "L2" to "average_SEM"
sleep (0.5,) {}
SLEEP 0.5
Get Checksum: -1683019534
peak_hop () {'ncycles': 6, 'hops': [{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}], 'mftable': 'ic_mftable'}
Using MFTable /Users/jan/PychronDev/setupfiles/spectrometer/mftables/ic_mftable.csv
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/ic_mftable.csv
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
adding conditionals 
make new hop generatior
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar40 (Group) '' table AX
add group /signal/Ar40 (Group) '' table L2
flush and close file /Users/jan/PychronDev/data/isotopes/49/2db0c7-fdfb-40eb-8f74-646dd6c6d16b.h5
measuring signal. ncounts=342.0
Equilibration Finished
13:49:48 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
starting measurement
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89135708e+00]
H1 map mass to dac 39.9624 >> 5.87706441621
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87702980673) on H1
setting magnet DAC
current  : 5.997432
requested: 5.877030
Delta Dac: 0.120403
Checking detector protection. dv=0.12040
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
SetMagnetDAC 5.87702980673 ===>> OK
Magnet settling time: 0.500
Close R ===>> OK
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetMagnetMoving ===>> False
GetValveState R ===>> False
change switch state (False, False)
Post Equilibration Started jan_pump_extraction_line.py
13:49:49 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Pump Microbone
ProtectDetector CDD,Off ===>> OK
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
GetDeflection CDD ===>> 50
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Close R ===>> OK
GetValveState R ===>> False
change switch state (False, False)
---------------------------------------- close None (Jan Inlet) result=[(False, False)]
locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
opening name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetValveState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
13:49:49 -- OPEN   VALVE-A (CO2 Laser to Jan)
---------------------------------------- open None (CO2 Laser to Jan) result=[(True, True)], time=0.13 sec
locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
closing name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
locked=[True]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetValveState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
13:49:51 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.16 sec
Get Checksum: -1471846086
locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
13:49:51 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.13 sec
locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetValveState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
13:49:52 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.40 sec
locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
opening name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetValveState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=2
13:49:53 -- OPEN   VALVE-T (Microbone to CO2 Laser)
---------------------------------------- open None (Microbone to CO2 Laser) result=[(True, True)], time=0.45 sec
locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetValveState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
13:49:53 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.42 sec
locked=[False]
sleep (1,) {}
SLEEP 1.0
Get Checksum: -1658848586
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed 6.0
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed 0
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
closing name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetValveState E ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Minibone) result=[(False, False)]
locked=[False]
open () {'description': 'Minibone to Bone'}
opening name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetValveState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=2
13:49:55 -- OPEN   VALVE-I (Minibone to Bone)
---------------------------------------- open None (Minibone to Bone) result=[(True, True)], time=0.45 sec
locked=[False]
close () {'description': 'Microbone to Minibone'}
closing name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetValveState L ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to Minibone) result=[(False, False)]
locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
Join finished
delaying 8 for detectors to settle after peak hop
GetData ===>> H2,-0.216934281918327,H1,0.449177334796702,AX,0.0243385540792199,L1,-0.0431066526368661,L2,-0.026...
GetData ===>> H2,-0.216934281918327,H1,0.449177334796702,AX,0.0243385540792199,L1,-0.0431066526368661,L2,-0.026...
open () {'description': 'Minibone to Turbo'}
opening name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetValveState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=2
13:49:57 -- OPEN   VALVE-P (Minibone to Turbo)
set states for children of L. state=False
---------------------------------------- open None (Minibone to Turbo) result=[(True, True)], time=0.15 sec
handle state [('L', False)]
update switch state L False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: -930805844
locked=[False]
open () {'description': 'Quad Inlet'}
opening name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetValveState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=2
13:49:58 -- OPEN   VALVE-Q (Quad Inlet)
---------------------------------------- open None (Quad Inlet) result=[(True, True)], time=0.16 sec
locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
GetData ===>> H2,-0.145768411522242,H1,0.474250234882257,AX,-0.0230371694010587,L1,-0.0449001617180181,L2,-0.00...
GetData ===>> H2,-0.224793453225337,H1,0.539380519796828,AX,-0.00380296486704343,L1,-0.0329987807809074,L2,0.08...
GetData ===>> H2,-0.166509413706099,H1,0.53678549848295,AX,-0.0619678226766354,L1,-0.0226874357533337,L2,0.0042...
Get Checksum: 1712718218
GetData ===>> H2,-0.20601901679817,H1,0.468227101930618,AX,-0.0589985964700827,L1,-0.029530499409876,L2,-0.0359...
GetData ===>> H2,-0.29125730787368,H1,0.467832742742069,AX,-0.0892296187527089,L1,-0.0165389680377923,L2,-0.060...
GetData ===>> H2,-0.269673260374863,H1,0.529491097483903,AX,-0.0527479048665761,L1,-0.0154678775455162,L2,0.038...
Get Checksum: 1712718218
GetData ===>> H2,-0.199257345109791,H1,0.454365709255078,AX,-0.0594607388185769,L1,0.017442867455766,L2,0.10845...
GetData ===>> H2,-0.183116403616931,H1,0.534692788229685,AX,-0.0449484178309167,L1,0.0170873592980445,L2,0.1034...
Get Checksum: 1712718218
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('AX', None)]
----------------------- HOP Ar40 AX
detector Detector(AX)
POSITION Ar40 AX
Mapping mass to dac mass func: "parabolic"
AX map mass coeffs = [ 0.          0.          5.98633709]
AX map mass to dac 39.9624 >> 5.98633709086
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.98630183788) on AX
setting magnet DAC
current  : 5.877030
requested: 5.986302
Delta Dac: 0.109272
Checking detector protection. dv=0.10927
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
SetMagnetDAC 5.98630183788 ===>> OK
Magnet settling time: 0.500
GetMagnetMoving ===>> False
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
update detector isotope pairing
detectors=['AX']
isotopes=['Ar40']
updating pairing AX - Ar40
could not locate det=AX iso=Ar40
Get Checksum: 1712718218
Get Checksum: 1712718218
Join finished
block finished. duration 15.0423469543
close () {'description': 'Outer Pipette 1'}
closing name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetValveState W ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 1) result=[(False, False)]
locked=[False]
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed 16.0
PumpMinibone.py completed successfully
gosub finished
executed 4.0
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
13:50:13 -- ******* Post Equilibration Finished *******
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
delaying 8 for detectors to settle after peak hop
GetData ===>> H2,-0.276019980155049,H1,-0.0772461322257055,AX,0.620855706973695,L1,-0.0456746958298122,L2,-0.08...
GetData ===>> H2,-0.276019980155049,H1,-0.0772461322257055,AX,0.620855706973695,L1,-0.0456746958298122,L2,-0.08...
GetData ===>> H2,-0.328715243174051,H1,0.0258619231729764,AX,0.371127013164232,L1,-0.0680376339840194,L2,0.0094...
GetData ===>> H2,-0.139942984930545,H1,0.0359804867653637,AX,0.51947240800871,L1,0.00713701960958604,L2,-0.0441...
Get Checksum: -860229079
GetData ===>> H2,-0.225454646039777,H1,-0.0505908487996585,AX,0.666255304074057,L1,0.0162670960920428,L2,0.0904...
GetData ===>> H2,-0.243957356667828,H1,-0.0469067113834097,AX,0.472696609327355,L1,-0.0104251887472062,L2,-0.01...
GetData ===>> H2,-0.11520677427178,H1,-0.0190984257320668,AX,0.564438698777013,L1,-0.0309701730280826,L2,-0.044...
Get Checksum: -860229079
GetData ===>> H2,-0.130476663251951,H1,0.0164602123116754,AX,0.543999006585374,L1,-0.0114118498192894,L2,-0.043...
GetData ===>> H2,-0.220573566307116,H1,-0.0341840678376169,AX,0.701328119755959,L1,-0.00848395347624215,L2,0.01...
GetData ===>> H2,-0.202102161247228,H1,-0.100307474616801,AX,0.683940908458973,L1,-0.00449599273182836,L2,0.033...
Get Checksum: -860229079
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['L2']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('L2', None)]
----------------------- HOP Ar40 L2
detector Detector(L2)
POSITION Ar40 L2
Mapping mass to dac mass func: "parabolic"
L2 map mass coeffs = [ 0.          0.          6.21795065]
L2 map mass to dac 39.9624 >> 6.21795064631
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (6.21791402938) on L2
setting magnet DAC
current  : 5.986302
requested: 6.217914
Delta Dac: 0.231612
Checking detector protection. dv=0.23161
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
SetMagnetDAC 6.21791402938 ===>> OK
Magnet settling time: 0.500
GetMagnetMoving ===>> False
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
update detector isotope pairing
detectors=['L2']
isotopes=['Ar40']
updating pairing L2 - Ar40
could not locate det=L2 iso=Ar40
Get Checksum: -860229079
refresh_lock_state fired. ('R', True)
refresh_canvas_needed fired
Get Checksum: 239078840
Get Checksum: 1484417215
State checksums do not match. Local:239078840 Remote:1484417215
State checksum failed
Join finished
delaying 8 for detectors to settle after peak hop
GetData ===>> H2,-0.167096543509851,H1,-0.052510361802338,AX,-0.117072633662609,L1,-0.0285482410513742,L2,0.828...
GetData ===>> H2,-0.167096543509851,H1,-0.052510361802338,AX,-0.117072633662609,L1,-0.0285482410513742,L2,0.828...
GetData ===>> H2,-0.170857501603088,H1,-0.0717034670440374,AX,-0.0462310432383967,L1,-0.0475515262053044,L2,0.7...
refresh_lock_state fired. ('O', True)
refresh_canvas_needed fired
GetData ===>> H2,-0.221305054422051,H1,-0.103215090823094,AX,-0.0816640835863572,L1,-0.00602659695455461,L2,0.7...
Get Checksum: 1484417215
GetData ===>> H2,-0.261619178989422,H1,-0.00872200033030772,AX,-0.0235457143979501,L1,-0.0352655717284882,L2,0....
GetData ===>> H2,-0.358573701762566,H1,-0.07591115276655,AX,-0.16029758822894,L1,-0.0287435024878491,L2,0.66171...
GetData ===>> H2,-0.201204301285433,H1,-0.0818826636007184,AX,-0.0380612381726757,L1,-0.0206015983820331,L2,0.7...
Get Checksum: 1484417215
GetData ===>> H2,-0.12613756557474,H1,-0.0224496620484292,AX,-0.0658727366335981,L1,-0.00543285570122342,L2,0.7...
GetData ===>> H2,-0.129453542655119,H1,-0.0396811160176867,AX,0.00600054896119029,L1,-0.000246026718635022,L2,0...
Get Checksum: 1484417215
GetData ===>> H2,-0.192201396483533,H1,-0.0431389742699516,AX,-0.0545850260898554,L1,-0.0295712251238705,L2,0.7...
%%%%%%%%%%%%%%%%%% Stop fired alive=True
13:50:43 -- stop execution
_cancel
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89135708e+00]
H1 map mass to dac 39.9624 >> 5.87706441621
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87702980673) on H1
setting magnet DAC
current  : 6.217914
requested: 5.877030
Delta Dac: 0.340884
Checking detector protection. dv=0.34088
Checking detector "CDD". Protection Threshold: 0.1 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
SetMagnetDAC 5.87702980673 ===>> OK
Magnet settling time: 0.500
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x137152128>
Estimated total time= 6337.0, elapsed time= 151.0, deviation= 6186.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
wait dialog stopped
Post Termination Started
13:50:44 -- ******* Post Termination Started *******
Post Measurement Started jan_pump_ms.py
13:50:44 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed 0
Pumping spectrometer
open () {'name': 'O'}
opening name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-O(Jan Ion Pump) software locked
change switch state (True, False)
---------------------------------------- open O () result=[(True, False)], time=0.00 sec
locked=[True]
executed 0
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
13:50:44 -- ******* Post Measurement Finished *******
----------------- stop -----------------
Post Termination Finished
13:50:44 -- ******* Post Termination Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
Get Checksum: 1484417215
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Get Checksum: 1484417215
Get Checksum: 1484417215
Join finished
delaying 8 for detectors to settle after peak hop
GetData ===>> H2,-0.0691588161590958,H1,0.781165643089676,AX,0.0317163586330538,L1,-0.0401774442285483,L2,-0.03...
measurement finished
estimated time: 358.613 actual time: :65.258
flush and close file /Users/jan/PychronDev/data/isotopes/49/2db0c7-fdfb-40eb-8f74-646dd6c6d16b.h5
measurement collection canceled
Cancel run state=canceled do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
wait dialog stopped
Post Termination Started
13:50:54 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
13:50:54 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
state changed from failed to canceled
_cancel
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x137152128>
Estimated total time= 6337.0, elapsed time= 151.0, deviation= 6186.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
wait dialog stopped
Post Termination Started
13:50:54 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
13:50:54 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
wait dialog stopped
executed 208.3
----------------- finish -----------------
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
13:50:54 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
state changed from canceled to failed
13:50:54 -- Automated run ic-01-J-65 failed duration: 155.472 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/IC.rem.txt
/Users/jan/PychronDev/experiments/rem/IC.ex.txt
doing event level: 3
