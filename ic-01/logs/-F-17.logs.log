do run
loading script "felix_ic_peak_hop.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x1.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 73.4
script duration name:ic_peak_hop seconds:73.0
loading script "felix_ic_peak_hop.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x1.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "felix_ic_peak_hop.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x1.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 2.0
calculate duration
testing...
no interpolation path defined
executed 34.0
executed 102.0
script duration name:air_x1 seconds:102.0
loading script "felix_ic_peak_hop.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x1.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 175.0
Run total estimated duration= 176.000
run duration: 0:02:56
doing event level: 2
14:13:29 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4910881008
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
adding queue conditionals from /Users/obama/PychronDev/queue_conditionals/normal.yaml
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ic-01-F-17
loading script "felix_ic_peak_hop.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x1.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ic-01-F-17
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
No metadata section in "felix_ic_peak_hop.py". Using default "None" value for "default_fits"
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
queue conditionals path /Users/obama/PychronDev/queue_conditionals/normal.yaml
loading conditionals from /Users/obama/PychronDev/queue_conditionals/normal.yaml
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
14:13:30 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),0.00126351657413915,H2,0.214884319252291,H1,-0.0616731627098087,AX,-0.0704915154953837,L1...
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1, signals=0.00126,0.21488,-0.06167,-0.07049,-0.48096
14:13:30 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
14:13:30 -- ******* Pre Extraction Check Passed *******
=================================================================================
14:13:30 -- stopping status monitor
stop 4917329552
Status monitor stopped
Status monitor finished
14:13:31 -- starting status monitor
start 4917329552
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 14:13:33.138052
Extraction Started felix_air_x1.py
14:13:33 -- ******* Extraction Started felix_air_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x125d656b0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 2.0
calculate duration
testing...
no interpolation path defined
executed 34.0
executed 102.0
Air Pipette x1
doing GOSUB
testing...
no interpolation path defined
executed 0
Waiting for minibone access
wait ('JanMiniboneFlag', 0) {}
waiting for JanMiniboneFlag = 0
Read JanMiniboneFlag ===>> 0
finished waiting
Minibone released
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
acquire ('FelixMiniboneFlag',) {'clear': True}
acquire FelixMiniboneFlag
Set FelixMiniboneFlag 1 ===>> OK
FelixMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
minibone acquired
executed 0
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 0
Prepare for Air Shot
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetValveState H ===>> False
change switch state (False, False)
---------------------------------------- close None (Felix Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Felix Ion Pump'}
opening name=--- desc=Felix Ion Pump
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=3
14:13:33 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open None (Felix Ion Pump) result=[(True, True)], time=0.11 sec
locked=[False]
close () {'description': 'Microbone to Minibone'}
closing name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetValveState L ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to Minibone) result=[(False, False)]
locked=[False]
close () {'description': 'Quad Inlet'}
closing name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetValveState Q ===>> False
change switch state (False, False)
---------------------------------------- close None (Quad Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
Get Checksum: -1096974214
GetValveState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=3
14:13:34 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.23 sec
locked=[False]
open () {'description': 'Bone to Minibone'}
opening name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetValveState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=3
14:13:34 -- OPEN   VALVE-E (Bone to Minibone)
---------------------------------------- open None (Bone to Minibone) result=[(True, True)], time=0.16 sec
locked=[False]
open () {'description': 'Minibone to Bone'}
opening name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=3
GetValveState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=3
refresh_canvas_needed fired
14:13:35 -- OPEN   VALVE-I (Minibone to Bone)
---------------------------------------- open None (Minibone to Bone) result=[(True, True)], time=0.61 sec
locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetValveState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=3
14:13:36 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.15 sec
locked=[False]
close () {'description': 'Bone to CO2 Laser'}
closing name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
GetValveState D ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to CO2 Laser) result=[(False, False)]
locked=[False]
close () {'description': 'Bone to Diode Laser'}
closing name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
set states for children of B. state=False
set states for children of D. state=False
handle state [('B', False), ('D', False)]
update switch state B False args=() kw={'refresh': True} ncanvase=3
update switch state D False args=() kw={'refresh': False} ncanvase=3
GetValveState B ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Diode Laser) result=[(False, False)]
locked=[False]
executed 0
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 32.0
Evacuate Pipette 2
open () {'description': 'Minibone to Turbo'}
opening name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open P ===>> OK
refresh_canvas_needed fired
GetValveState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=3
14:13:37 -- OPEN   VALVE-P (Minibone to Turbo)
---------------------------------------- open None (Minibone to Turbo) result=[(True, True)], time=0.19 sec
locked=[False]
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
%%%%%%%%%%%%%%%%%% Stop fired alive=True
14:13:37 -- stop execution
_cancel
Get Checksum: 114333912
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=3
14:13:38 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.23 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x136621478>
Estimated total time= 387.0, elapsed time= 16.0, deviation= 371.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Join finished
block finished. duration 1.25501799583
executed 48.0
EvacPipette2.py completed successfully
Cancel run state=None do_post_equilibration=True
gosub finished
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
executed 102.0
no extraction action
no extraction action
Post Equilibration Started felix_pump_extraction_line.py
Post Measurement Started felix_pump_ms.py
14:13:40 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
Post Termination Started
14:13:40 -- ******* Post Measurement Started felix_pump_ms.py *******
14:13:40 -- ******* Post Termination Started *******
testing...
no interpolation path defined
testing...
Post Measurement Started felix_pump_ms.py
no interpolation path defined
14:13:40 -- ******* Post Measurement Started felix_pump_ms.py *******
calculate duration
executed 0
testing...
executed 0
Pumping spectrometer
no interpolation path defined
felix_pump_ms.py completed successfully
executed 4.0
open () {'name': 'V'}
setting _ms_pumptime
executed 4.0
opening name=V desc=---
Post Measurement Finished
Pump after analysis
14:13:40 -- ******* Post Measurement Finished *******
doing GOSUB
checking ownership. requestor=129.138.12.137
----------------- stop -----------------
check software interlocks V
testing...
Post Termination Finished
interlocks []
no interpolation path defined
14:13:40 -- ******* Post Termination Finished *******
actuate state mode=None-script, software_lock=False
executed 4.0
doing actuation None-script open_channel False
----------------- finish -----------------
Pump Bone
state changed from extraction to failed
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
----------------- stop -----------------
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Open V ===>> OK
Close H ===>> OK
GetValveState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=3
14:13:40 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open V () result=[(True, True)], time=0.19 sec
GetValveState H ===>> False
change switch state (False, False)
---------------------------------------- close None (Felix Inlet) result=[(False, False)]
locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
closing name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
locked=[True]
sleep (1,) {}
SLEEP 1.0
locked=[False]
executed 0
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
14:13:40 -- ******* Post Measurement Finished *******
----------------- finish -----------------
----------------- stop -----------------
Extraction Finished unsuccessfully
14:13:40 -- ******* Extraction Finished unsuccessfully *******
failed execution step Extraction Failed
extraction did not complete successfully
14:13:40 -- Automated run ic-01-F-17 failed duration: 10.719 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/IC.rem.txt
/Users/obama/PychronDev/experiments/rem/IC.ex.txt
doing event level: 3
