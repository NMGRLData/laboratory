do run
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=87.0, duration=0.0101389884949
script duration name:ic_peak_hop3 seconds:87.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.09808349609e-05
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.29289245605e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000146150588989
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.48770141602e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.48770141602e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.50746917725e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.70092010498e-05
executed snippet estimated_duration=106.0, duration=0.00682210922241
script duration name:air_x1 seconds:106.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000139951705933
executed snippet estimated_duration=4.0, duration=0.000976085662842
Script duration 193.0
Run total estimated duration= 194.000
run duration: 0:03:14
doing event level: 2
14:26:19 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4943567856
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ic-01-J-317
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ic-01-J-317
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
No metadata section in "jan_ic_peak_hop3.py". Using default "None" value for "default_fits"
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
14:26:19 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.02285,0.08028,-0.09616,-0.00264,-0.10505,0.00000
14:26:19 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
14:26:19 -- ******* Pre Extraction Check Passed *******
=================================================================================
14:26:19 -- stopping status monitor
stop 4940105680
Status monitor stopped
Status monitor finished
14:26:20 -- starting status monitor
start 4940105680
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 14:26:22.247960
Extraction Started jan_air_x1.py
14:26:22 -- ******* Extraction Started jan_air_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12938a8f0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.57763671875e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000115871429443
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.01086425781e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.41617584229e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.79357147217e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.79628753662e-05
executed snippet estimated_duration=106.0, duration=0.00615191459656
Jan Air Script x1
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed snippet estimated_duration=0, duration=0.0156888961792
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000262975692749
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=5
14:26:22 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=5
14:26:23 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=5
14:26:23 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=5
14:26:24 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=5
14:26:24 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=5
14:26:25 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=5
14:26:25 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=5
14:26:26 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=5
14:26:26 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=5
14:26:27 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
close name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetIndicatorState T ===>> False
change switch state (True, True)
update switch state T False args=() kw={} ncanvase=5
14:26:28 -- CLOSE  VALVE-T (Microbone to CO2 Laser)
-------------------------- close None (Microbone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.99519920349
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000125169754028
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=5
14:26:28 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=5
14:26:29 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=5
14:26:29 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=5
14:26:30 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
len selected runs 1
cloning run c-02-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:c-02-J
using cached meta values for c-02-J
clear labnumber
labnumber changed old:c-02-J, new:
clear labnumber
clear labnumber
close session 4943567856
name=Measurement, new=unknown400_120, suppress=True
name=Extraction, new=cocktail_x1, suppress=True
calculating time of run c-02-J-00
loading script "jan_unknown400_120.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000144958496094
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
loading script "jan_unknown400_120.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.91006469727e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000170946121216
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.20295715332e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.60691070557e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.79900360107e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=8.51154327393e-05
executed snippet estimated_duration=108.0, duration=0.007080078125
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000127077102661
executed snippet estimated_duration=4.0, duration=0.00108599662781
Script duration 664.0
Run total estimated duration= 665.000
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=87.0, duration=0.00890803337097
script duration name:ic_peak_hop3 seconds:87.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.8835067749e-05
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_pump_extraction_line.py"
pump_extraction_line in script context. using previous estimated duration
Script duration 87.0
Run total estimated duration= 88.000
ic_peak_hop3 in script context. using previous estimated duration
script duration name:ic_peak_hop3 seconds:87.0
pump_ms in script context. using previous estimated duration
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.10079956055e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.3936920166e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.20295715332e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.48770141602e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.81741333008e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.60555267334e-05
executed snippet estimated_duration=106.0, duration=0.00498485565186
script duration name:air_x1 seconds:106.0
Script duration 193.0
Run total estimated duration= 194.000
nruns=3 before=5.0, run_dur=947.0, btw=240.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000149011611938
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.19616699219e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.48905944824e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=8.39233398438e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.10758972168e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.91549682617e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000127077102661
executed snippet estimated_duration=108.0, duration=0.00591516494751
script duration name:cocktail_x1 seconds:108.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149011611938
executed snippet estimated_duration=4.0, duration=0.00109601020813
Script duration 664.0
Run total estimated duration= 665.000
run duration: 665.0
len selected runs 1
cloning run c-02-J-00. set_labnumber=True, set_position=True
labnumber changed old:, new:c-02-J
using cached meta values for c-02-J
Join finished
block finished. duration 15.0560228825
executed snippet estimated_duration=48.0, duration=17.9217879772
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.51290130615e-05
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=5
14:26:46 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
open name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Z ===>> OK
GetIndicatorState Z ===>> OK
change switch state (True, True)
update switch state Z True args=() kw={} ncanvase=5
14:26:47 -- OPEN   VALVE-Z (Inner Pipette 2)
-------------------------- open None (Inner Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Autosaving to /Users/jan/PychronDev/experiments/auto_save/Test_For_Drift.bak
use git repo changed False
window opened
opening pyscript: /Users/jan/PychronDev/scripts/extraction/jan_cocktail_x1.py
reload canvas
14:26:59 -- reloading canvas scene
refresh network
handle state ('A', True, False)
update switch state A True args=(False,) kw={} ncanvase=5
handle state ('C', True, False)
update switch state C True args=(False,) kw={} ncanvase=5
handle state ('B', True, False)
update switch state B True args=(False,) kw={} ncanvase=5
handle state ('E', False, False)
update switch state E False args=(False,) kw={} ncanvase=5
handle state ('D', True, False)
update switch state D True args=(False,) kw={} ncanvase=5
handle state ('G', False, False)
update switch state G False args=(False,) kw={} ncanvase=5
handle state ('F', False, False)
update switch state F False args=(False,) kw={} ncanvase=5
handle state ('I', False, False)
update switch state I False args=(False,) kw={} ncanvase=5
handle state ('H', False, False)
update switch state H False args=(False,) kw={} ncanvase=5
handle state ('K', True, False)
update switch state K True args=(False,) kw={} ncanvase=5
handle state ('M', True, False)
update switch state M True args=(False,) kw={} ncanvase=5
handle state ('L', True, False)
update switch state L True args=(False,) kw={} ncanvase=5
handle state ('O', True, False)
update switch state O True args=(False,) kw={} ncanvase=5
handle state ('N', True, False)
update switch state N True args=(False,) kw={} ncanvase=5
handle state ('Q', False, False)
update switch state Q False args=(False,) kw={} ncanvase=5
handle state ('P', False, False)
update switch state P False args=(False,) kw={} ncanvase=5
handle state ('S', True, False)
update switch state S True args=(False,) kw={} ncanvase=5
handle state ('R', False, False)
update switch state R False args=(False,) kw={} ncanvase=5
handle state ('U', True, False)
update switch state U True args=(False,) kw={} ncanvase=5
handle state ('T', False, False)
update switch state T False args=(False,) kw={} ncanvase=5
handle state ('W', False, False)
update switch state W False args=(False,) kw={} ncanvase=5
handle state ('V', False, False)
update switch state V False args=(False,) kw={} ncanvase=5
handle state ('Y', False, False)
update switch state Y False args=(False,) kw={} ncanvase=5
handle state ('X', False, False)
update switch state X False args=(False,) kw={} ncanvase=5
handle state ('Z', True, False)
update switch state Z True args=(False,) kw={} ncanvase=5
refresh_canvas_needed fired
loaded current shot count 2927 time:2017-06-14 13:34:19
loaded current shot count 2221 time:2017-06-14 14:14:43
14:27:00 -- starting status monitor
start 4940105680
Monitor already running
Join finished
block finished. duration 15.3428070545
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=5
14:27:03 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=18.5137929916
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.89165496826e-05
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=5
14:27:04 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=5
14:27:05 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01580691338
open () {'description': 'Microbone to Minibone'}
open name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
GetIndicatorState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=5
14:27:07 -- OPEN   VALVE-L (Microbone to Minibone)
-------------------------- open None (Microbone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.47754096985
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000182867050171
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=5
14:27:08 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
selected gosub common:ExpandPipette1
opening pyscript: /Users/jan/PychronDev/scripts/extraction/common/ExpandPipette1.py
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00963997841
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
increment shot count 2928
saved current shot count 2928
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=5
14:27:10 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0614850521
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=54.0, duration=18.9208099842
ExpandPipette2.py completed successfully
gosub finished
executed snippet estimated_duration=106.0, duration=64.8655548096
jan_air_x1.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
14:27:27 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
14:27:27 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.258926936459
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.7700 5.8796 5.9929 6.1085 6.2312 6.3938
Ar39     5.7249 5.7719 5.8853 6.0517 6.1163 6.2803
Ar36     5.4024 5.4409 5.5487 5.7105 5.7713 5.9314
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 197.923274125618
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=ic-01-J analysis type=detector_ic
Measurement Started jan_ic_peak_hop3.py
14:27:27 -- ******* Measurement Started jan_ic_peak_hop3.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.147042666178
GetParameter Source Current Readback ===>> 549.616919978026
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
flush and close file /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
testing...
no interpolation path defined
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
setting detector H2 to Ar41 (40.964)
setting detector H1 to Ar40 (39.964)
setting detector AX to Ar39 (38.964)
setting detector L1 to Ar38 (37.964)
setting detector L2 to Ar37 (36.964)
setting detector CDD to Ar36 (35.964)
setting detector H2 to Ar41 (40.9668)
setting detector H1 to Ar40 (39.9668)
setting detector AX to Ar39 (38.9668)
setting detector L1 to Ar38 (37.9668)
setting detector L2 to Ar37 (36.9668)
setting detector CDD to Ar36 (35.9668)
executed snippet estimated_duration=137.0, duration=0.0111238956451
unknown measurement script
set_deflection ('CDD', 2000) {}
setting spectrometer parameter SetDeflection CDD,2000
SetDeflection CDD,2000 ===>> OK
load_hops ('hops/ic3_hops.yaml',) {}
[{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}]
define_hops ([{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}],) {}
*************** Set Analysis View Ar/Ar
equilibrate () {'delay': 3.0, 'inlet': 'R', 'outlet': 'O', 'eqtime': 25.0}
Equilibration Started
14:27:27 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=5
14:27:27 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3.0s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=5
14:27:31 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 25.0sec
sleep (24.0,) {}
SLEEP 24.0
block started
WaitControl setup for 24.0  
Join finished
block finished. duration 24.081799984
set_fits ('Ar40H1:parabolic', 'Ar40AX:parabolic', 'Ar40L2:parabolic') {}
set "Ar40H1" to "parabolic"
set "Ar40AX" to "parabolic"
set "Ar40L2" to "parabolic"
set_baseline_fits ('average_SEM',) {}
set "H1" to "average_SEM"
set "AX" to "average_SEM"
set "L2" to "average_SEM"
sleep (0.5,) {}
SLEEP 0.5
peak_hop () {'ncycles': 6, 'hops': [{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}], 'mftable': 'ic_mftable'}
Using MFTable /Users/jan/PychronDev/setupfiles/spectrometer/mftables/ic_mftable.csv
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/ic_mftable.csv
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
adding conditionals 
make new hop generatior
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar40 (Group) '' table AX
add group /signal/Ar40 (Group) '' table L2
flush and close file /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
measuring signal. ncounts=342.0
"signal" increment series count="2" fit count="1" regressing="True"
14:27:56 -- stopping status monitor
stop 4940105680
Status monitor stopped
Equilibration Finished
14:27:56 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
starting measurement
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 39.9624 >> 5.88101
GetHighVoltage ===>> 4500
positioning Ar40 (5.88101) on H1
setting magnet DAC
current  : 5.304145
requested: 5.881010
Delta Dac: 0.576865
Checking detector protection. dv=0.57686
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.88101 ===>> OK
Magnet settling time: 0.500 0.500
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=5
14:27:56 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
14:27:56 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000180006027222
executed snippet estimated_duration=4.0, duration=0.00216197967529
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000178098678589
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=5
14:27:57 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
Status monitor finished
GetMagnetMoving ===>> True
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetMagnetMoving ===>> True
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=5
14:27:57 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
GetMagnetMoving ===>> True
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=5
14:27:59 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
GetMagnetMoving ===>> True
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 2000
set_dac. change=True
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=5
14:27:59 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=5
14:28:00 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=5
14:28:00 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=5
14:28:01 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.04390501976
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.19480895996e-05
Entering Pump minibone script
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
get resource value 1.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 1
Get Resource Value JanMiniboneFlag=1.0
Pump minibone
close () {'description': 'Bone to Minibone'}
close name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=5
14:28:03 -- CLOSE  VALVE-E (Bone to Minibone)
-------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=5
14:28:03 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=5
14:28:04 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep () {'duration': 1.0}
SLEEP 1.0
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=5
14:28:05 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=5
14:28:06 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
sleep () {'duration': 15.0}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('AX', None)]
----------------------- HOP Ar40 AX
detector Detector(AX)
POSITION Ar40 AX
Mapping mass to dac mass func: "parabolic"
AX map mass coeffs = [ 0.       0.       5.99009]
AX map mass to dac 39.9624 >> 5.99009
GetHighVoltage ===>> 4500
positioning Ar40 (5.99009) on AX
setting magnet DAC
current  : 5.881010
requested: 5.990090
Delta Dac: 0.109080
Checking detector protection. dv=0.10908
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.99009 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX']
isotopes=['Ar40']
updating pairing AX - Ar40
could not locate det=AX iso=Ar40
Join finished
block finished. duration 15.0837240219
close () {'description': 'Outer Pipette 1'}
close name=--- desc=Outer Pipette 1
checking ownership. requestor=129.138.12.150
check software interlocks W
interlocks ['X']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close W ===>> OK
GetIndicatorState W ===>> False
change switch state (True, True)
update switch state W False args=() kw={} ncanvase=5
14:28:21 -- CLOSE  VALVE-W (Outer Pipette 1)
-------------------------- close None (Outer Pipette 1) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=5
14:28:22 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
release ('JanMiniboneFlag',) {}
release JanMiniboneFlag
Set JanMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=16.0, duration=19.7961380482
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=25.8555071354
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
14:28:22 -- ******* Post Equilibration Finished *******
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['L2']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('L2', None)]
----------------------- HOP Ar40 L2
detector Detector(L2)
POSITION Ar40 L2
Mapping mass to dac mass func: "parabolic"
L2 map mass coeffs = [ 0.       0.       6.22107]
L2 map mass to dac 39.9624 >> 6.22107
GetHighVoltage ===>> 4500
positioning Ar40 (6.22107) on L2
setting magnet DAC
current  : 5.990090
requested: 6.221070
Delta Dac: 0.230980
Checking detector protection. dv=0.23098
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 6.22107 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['L2']
isotopes=['Ar40']
updating pairing L2 - Ar40
could not locate det=L2 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 39.9624 >> 5.88101
GetHighVoltage ===>> 4500
positioning Ar40 (5.88101) on H1
setting magnet DAC
current  : 6.221070
requested: 5.881010
Delta Dac: 0.340060
Checking detector protection. dv=0.34006
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88101 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('AX', None)]
----------------------- HOP Ar40 AX
detector Detector(AX)
POSITION Ar40 AX
Mapping mass to dac mass func: "parabolic"
AX map mass coeffs = [ 0.       0.       5.99009]
AX map mass to dac 39.9624 >> 5.99009
GetHighVoltage ===>> 4500
positioning Ar40 (5.99009) on AX
setting magnet DAC
current  : 5.881010
requested: 5.990090
Delta Dac: 0.109080
Checking detector protection. dv=0.10908
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.99009 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX']
isotopes=['Ar40']
updating pairing AX - Ar40
could not locate det=AX iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
14:29:28 -- collecting point 50
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['L2']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('L2', None)]
----------------------- HOP Ar40 L2
detector Detector(L2)
POSITION Ar40 L2
Mapping mass to dac mass func: "parabolic"
L2 map mass coeffs = [ 0.       0.       6.22107]
L2 map mass to dac 39.9624 >> 6.22107
GetHighVoltage ===>> 4500
positioning Ar40 (6.22107) on L2
setting magnet DAC
current  : 5.990090
requested: 6.221070
Delta Dac: 0.230980
Checking detector protection. dv=0.23098
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 6.22107 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['L2']
isotopes=['Ar40']
updating pairing L2 - Ar40
could not locate det=L2 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 39.9624 >> 5.88101
GetHighVoltage ===>> 4500
positioning Ar40 (5.88101) on H1
setting magnet DAC
current  : 6.221070
requested: 5.881010
Delta Dac: 0.340060
Checking detector protection. dv=0.34006
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88101 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('AX', None)]
----------------------- HOP Ar40 AX
detector Detector(AX)
POSITION Ar40 AX
Mapping mass to dac mass func: "parabolic"
AX map mass coeffs = [ 0.       0.       5.99009]
AX map mass to dac 39.9624 >> 5.99009
GetHighVoltage ===>> 4500
positioning Ar40 (5.99009) on AX
setting magnet DAC
current  : 5.881010
requested: 5.990090
Delta Dac: 0.109080
Checking detector protection. dv=0.10908
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.99009 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX']
isotopes=['Ar40']
updating pairing AX - Ar40
could not locate det=AX iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['L2']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('L2', None)]
----------------------- HOP Ar40 L2
detector Detector(L2)
POSITION Ar40 L2
Mapping mass to dac mass func: "parabolic"
L2 map mass coeffs = [ 0.       0.       6.22107]
L2 map mass to dac 39.9624 >> 6.22107
GetHighVoltage ===>> 4500
positioning Ar40 (6.22107) on L2
setting magnet DAC
current  : 5.990090
requested: 6.221070
Delta Dac: 0.230980
Checking detector protection. dv=0.23098
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 6.22107 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['L2']
isotopes=['Ar40']
updating pairing L2 - Ar40
could not locate det=L2 iso=Ar40
error: 'NoneType' object has no attribute 'row' group:signal det:AX iso:
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 39.9624 >> 5.88101
GetHighVoltage ===>> 4500
positioning Ar40 (5.88101) on H1
setting magnet DAC
current  : 6.221070
requested: 5.881010
Delta Dac: 0.340060
Checking detector protection. dv=0.34006
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88101 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
error: 'NoneType' object has no attribute 'row' group:signal det:L2 iso:
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
14:30:59 -- collecting point 100
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['AX']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('AX', None)]
----------------------- HOP Ar40 AX
detector Detector(AX)
POSITION Ar40 AX
Mapping mass to dac mass func: "parabolic"
AX map mass coeffs = [ 0.       0.       5.99009]
AX map mass to dac 39.9624 >> 5.99009
GetHighVoltage ===>> 4500
positioning Ar40 (5.99009) on AX
setting magnet DAC
current  : 5.881010
requested: 5.990090
Delta Dac: 0.109080
Checking detector protection. dv=0.10908
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.99009 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['AX']
isotopes=['Ar40']
updating pairing AX - Ar40
could not locate det=AX iso=Ar40
error: 'NoneType' object has no attribute 'row' group:signal det:H1 iso:
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['L2']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('L2', None)]
----------------------- HOP Ar40 L2
detector Detector(L2)
POSITION Ar40 L2
Mapping mass to dac mass func: "parabolic"
L2 map mass coeffs = [ 0.       0.       6.22107]
L2 map mass to dac 39.9624 >> 6.22107
GetHighVoltage ===>> 4500
positioning Ar40 (6.22107) on L2
setting magnet DAC
current  : 5.990090
requested: 6.221070
Delta Dac: 0.230980
Checking detector protection. dv=0.23098
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 6.22107 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['L2']
isotopes=['Ar40']
updating pairing L2 - Ar40
could not locate det=L2 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
$$$$$$$$$$$$$$$$$ SETTING is_baseline False
Peak hop Detectors=['H1']
Peak hop Deflections=[None]
Peak hop DeflectionsPairs=[('H1', None)]
----------------------- HOP Ar40 H1
detector Detector(H1)
POSITION Ar40 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 39.9624 >> 5.88101
GetHighVoltage ===>> 4500
positioning Ar40 (5.88101) on H1
setting magnet DAC
current  : 6.221070
requested: 5.881010
Delta Dac: 0.340060
Checking detector protection. dv=0.34006
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88101 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
update detector isotope pairing
detectors=['H1']
isotopes=['Ar40']
updating pairing H1 - Ar40
could not locate det=H1 iso=Ar40
Join finished
delaying 8 for detectors to settle after peak hop
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0880327725069674}"
ic-01-J-317   air   NoIrradiation A:10 set to terminate after 4 ncycles
14:31:49 -- user termination. measurement iteration executed 4/6 cycles
waiting for write to finish
measurement finished
estimated time: 358.613 actual time: :232.898
flush and close file /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
define_detectors ('Ar40', 'H1') {}
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
define_detectors ('Ar39', 'AX') {}
setting detector H2 to Ar41 (40.964)
setting detector H1 to Ar40 (39.964)
setting detector AX to Ar39 (38.964)
setting detector L1 to Ar38 (37.964)
setting detector L2 to Ar37 (36.964)
setting detector CDD to Ar36 (35.964)
define_detectors ('Ar37', 'L2') {}
setting detector H2 to Ar41 (40.9668)
setting detector H1 to Ar40 (39.9668)
setting detector AX to Ar39 (38.9668)
setting detector L1 to Ar38 (37.9668)
setting detector L2 to Ar37 (36.9668)
setting detector CDD to Ar36 (35.9668)
baselines () {'settling_time': 10, 'detector': 'H1', 'mass': 34.2, 'ncounts': 75}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H1), Detector(AX), Detector(L2)]
add group baseline table H1
add group baseline table AX
add group baseline table L2
flush and close file /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [  1.08772369e-05   9.93017553e-02   1.89530266e+00]
H1 map mass to dac 34.2 >> 5.30414514117
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.30414514117) on H1
setting magnet DAC
current  : 5.881010
requested: 5.304145
Delta Dac: 0.576865
Checking detector protection. dv=0.57686
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.30414514117 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 2000
set_dac. change=True
Delaying 10s for detectors to settle
Join finished
measuring baseline. ncounts=75
ic-01-J-317   air   NoIrradiation A:10 set to terminate after 4 ncycles
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.03125722958249321}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.03578680304889723}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.05769565422748068}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06387080289579827}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06338450682858257}"
14:32:28 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.06633405407189884}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.07511032194609447}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08295804140170028}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08354966753662496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08510756482396328}"
14:32:54 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08532333552065134}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08616515391178771}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08424640201801717}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08654010108481143}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08737288414324633}"
14:33:20 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08668793753096438}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0841044333202376}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08191963349452026}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08571598265072787}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0867159725747239}"
14:33:46 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08806946072031963}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0861097097481684}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0864912158456952}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08595218166904613}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08600365898740743}"
14:34:13 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08590389320823946}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08615535172490502}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08653162355805186}"
ic-01-J-317   air   NoIrradiation A:10 set to terminate after 221 counts
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08718252953067816}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0868316814707314}"
14:34:39 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0864251014351395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08603959908286439}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08638268239573674}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08660102984589091}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08669711916196204}"
14:35:05 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08717758769052514}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08793007470236783}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0889193693832747}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.08993145239566831}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0895344314147035}"
14:35:31 -- collecting point 200
ic-01-J-317   air   NoIrradiation A:10 set to terminate after 22 counts
14:35:34 -- user termination. measurement iteration executed 201/75 counts
state changed from measurement to truncated
waiting for write to finish
measurement finished
estimated time: 78.643 actual time: :211.249
flush and close file /Users/jan/PychronDev/data/isotopes/03/bc3af4-1ba8-4f3e-9c24-df3bc26a5a22.h5
set_deflection ('CDD', 50) {}
setting spectrometer parameter SetDeflection CDD,50
SetDeflection CDD,50 ===>> OK
finished measure script
executed snippet estimated_duration=161.5, duration=486.464928865
jan_ic_peak_hop3.py completed successfully
Measurement Finished
14:35:34 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
14:35:34 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.09944152832e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=5
14:35:34 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.36453795433
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
14:35:34 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end truncated
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5277392624 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5277392624
close session 5277392624
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
persistence save - dvc
================= post measurement started
create new session 4938774672
close session 4938774672
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-317.json
add to repo msg=modified - -J-317.dat.json
add to repo msg=modified - -J-317.blan.json
add to repo msg=modified - -J-317.inte.json
add to repo msg=modified - -J-317.icfa.json
add to repo msg=modified - -J-317.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/ic-01/tags/-J-317.tags.json
add to repo msg=modified - -J-317.peak.json
add to repo msg=modified - -J-317.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/ic-01/monitor/-J-317.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-317.inte.json
add to repo msg=modified - -J-317.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-317.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -J-317.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x148607e90>
pushing to remote=origin, url=https://github.com
meta repo has changes: scripts/jan/jan_ic_peak_hop3.py
ic-01-J-317   air   NoIrradiation A:10 set to terminate after 22 counts
create new session 4938774672
add association laboratory
get identifier "ic-01-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x133498e90>
close session 4938774672
================= post measurement finished
14:35:52 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
14:35:52 -- ******* Post Run Check Passed *******
14:35:52 -- Automated run ic-01-J-317 truncated duration: 573.043 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/Test_For_Drift.rem.txt
/Users/jan/PychronDev/experiments/rem/Test_For_Drift.ex.txt
doing event level: 3
