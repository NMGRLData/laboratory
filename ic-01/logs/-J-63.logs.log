do run
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 133.8
script duration name:ic_peak_hop3 seconds:134.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed 0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 4.0
calculate duration
testing...
no interpolation path defined
executed 36.0
executed 106.0
script duration name:air_x1 seconds:106.0
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 4.0
executed 4.0
Script duration 240.0
Run total estimated duration= 241.000
run duration: 0:04:01
doing event level: 2
11:04:20 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 5001263344
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ic-01-J-63
loading script "jan_ic_peak_hop3.py"
loading script "jan_pump_ms.py"
loading script "jan_air_x1.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ic-01-J-63
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
No metadata section in "jan_ic_peak_hop3.py". Using default "None" value for "default_fits"
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
11:04:20 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> H2,-0.290933737776613,H1,-0.028901370457146,AX,-0.144411596277817,L1,-0.0286680337932085,L2,-0.06...
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.29093,-0.02890,-0.14441,-0.02867,-0.06119,0.00000
11:04:20 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
11:04:20 -- ******* Pre Extraction Check Passed *******
=================================================================================
11:04:20 -- stopping status monitor
stop 5023255824
Alive clients [4990050032]
11:04:20 -- starting status monitor
start 5023255824
Monitor already running
start extraction
do extraction
Analysis started at 11:04:20.888301
Extraction Started jan_air_x1.py
11:04:20 -- ******* Extraction Started jan_air_x1.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12bf9c950>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 0
calculate duration
testing...
no interpolation path defined
executed 32.0
calculate duration
testing...
no interpolation path defined
executed 34.0
calculate duration
testing...
no interpolation path defined
executed 4.0
calculate duration
testing...
no interpolation path defined
executed 36.0
executed 106.0
Jan Air Script x1
doing GOSUB
testing...
no interpolation path defined
executed 0
Waiting for minibone access
wait ('FelixMiniboneFlag', 0) {}
waiting for FelixMiniboneFlag = 0
Read FelixMiniboneFlag ===>> 0
finished waiting
Minibone free
acquire ('JanMiniboneFlag',) {'clear': True}
acquire JanMiniboneFlag
Set JanMiniboneFlag 1 ===>> OK
JanMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
Minibone acquired
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
executed 0
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 0
Prepare for Air Shot
close () {'description': 'Jan Inlet'}
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetValveState R ===>> False
change switch state (False, False)
---------------------------------------- close None (Jan Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Jan Ion Pump'}
opening name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetValveState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
11:04:21 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open None (Jan Ion Pump) result=[(True, True)], time=0.12 sec
locked=[False]
close () {'description': 'Minibone to Bone'}
closing name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.150
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
GetValveState I ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Bone) result=[(False, False)]
locked=[False]
close () {'description': 'Bone to Minibone'}
closing name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
set states for children of I. state=False
handle state [('I', False)]
update switch state I False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetValveState E ===>> False
change switch state (False, False)
---------------------------------------- close None (Bone to Minibone) result=[(False, False)]
locked=[False]
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
close () {'description': 'Quad Inlet'}
closing name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.150
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetValveState Q ===>> False
change switch state (False, False)
---------------------------------------- close None (Quad Inlet) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Turbo'}
opening name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetValveState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
11:04:22 -- OPEN   VALVE-U (Microbone to Turbo)
---------------------------------------- open None (Microbone to Turbo) result=[(True, True)], time=0.12 sec
locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
opening name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetValveState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
11:04:23 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
---------------------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)], time=0.40 sec
Get Checksum: 1135772522
State checksums do not match. Local:-1772432964 Remote:1135772522
State checksum failed
locked=[False]
open () {'description': 'Microbone to Getter D-50'}
opening name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetValveState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
11:04:24 -- OPEN   VALVE-K (Microbone to Getter D-50)
---------------------------------------- open None (Microbone to Getter D-50) result=[(True, True)], time=0.40 sec
locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
set states for children of Q. state=False
set states for children of P. state=False
handle state [('Q', False), ('P', False)]
update switch state Q False args=() kw={'refresh': True} ncanvase=2
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
update switch state P False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
11:04:24 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.20 sec
locked=[False]
close () {'description': 'Microbone to CO2 Laser'}
closing name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close T ===>> OK
GetValveState T ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to CO2 Laser) result=[(False, False)]
locked=[False]
executed 0
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 32.0
Evacuate Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Minibone'}
opening name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open L ===>> OK
GetValveState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
11:04:25 -- OPEN   VALVE-L (Microbone to Minibone)
---------------------------------------- open None (Microbone to Minibone) result=[(True, True)], time=0.43 sec
locked=[False]
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
set states for children of T. state=False
handle state [('T', False)]
update switch state T False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: 365063141
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
11:04:27 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.15 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -875228829
Get Checksum: -875228829
Get Checksum: -875228829
Get Checksum: -875228829
Get Checksum: -875228829
Join finished
block finished. duration 15.0365231037
executed 48.0
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 34.0
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
closing name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetValveState Y ===>> False
change switch state (False, False)
---------------------------------------- close None (Outer Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
filling air pipette
open () {'description': 'Inner Pipette 2'}
opening name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
interlocked Y
Software Interlock. VALVE-Y is OPEN!. Will not open Z
change switch state (False, False)
---------------------------------------- open None (Inner Pipette 2) result=[(False, False)], time=0.00 sec
locked=[False]
Failed to open valve None Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
interlocked Y
Software Interlock. VALVE-Y is OPEN!. Will not open Z
change switch state (False, False)
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Get Checksum: 365063141
Join finished
block finished. duration 15.0497400761
close () {'description': 'Inner Pipette 2'}
closing name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetValveState Z ===>> False
change switch state (False, False)
---------------------------------------- close None (Inner Pipette 2) result=[(False, False)]
locked=[False]
sleep (1,) {}
SLEEP 1.0
Get Checksum: 365063141
executed 51.0
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 4.0
Prepare for air expansion
close () {'description': 'Microbone to Turbo'}
closing name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetValveState U ===>> False
change switch state (False, False)
---------------------------------------- close None (Microbone to Turbo) result=[(False, False)]
locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
opening name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetValveState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
11:05:00 -- OPEN   VALVE-M (Microbone to Getter NP-10)
---------------------------------------- open None (Microbone to Getter NP-10) result=[(True, True)], time=0.17 sec
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
Join finished
block finished. duration 2.01056599617
open () {'description': 'Microbone to Minibone'}
opening name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open L ===>> OK
Get Checksum: 1314755832
GetValveState L ===>> OK
change switch state (True, True)
update switch state L True args=() kw={} ncanvase=2
11:05:03 -- OPEN   VALVE-L (Microbone to Minibone)
---------------------------------------- open None (Microbone to Minibone) result=[(True, True)], time=0.42 sec
locked=[False]
executed 6.0
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed 36.0
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
closing name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetValveState P ===>> False
change switch state (False, False)
---------------------------------------- close None (Minibone to Turbo) result=[(False, False)]
locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.00842690468
open () {'description': 'Outer Pipette 2'}
opening name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.150
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetValveState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
11:05:05 -- OPEN   VALVE-Y (Outer Pipette 2)
---------------------------------------- open None (Outer Pipette 2) result=[(True, True)], time=0.23 sec
locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Get Checksum: -1971056164
Join finished
block finished. duration 15.0363850594
sleep (1,) {}
SLEEP 1.0
Get Checksum: -1971056164
executed 54.0
ExpandPipette2.py completed successfully
gosub finished
executed 106.0
jan_air_x1.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
create new session 4989841584
close session 4989841584
Extraction Finished
11:05:22 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
11:05:22 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,0.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,0.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.035158395898
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.7706 5.8785 5.9918 6.1066 6.2278 6.3387
Ar39     5.6698 5.7712 5.8841 5.9966 6.1155 6.2252
Ar36     5.3473 5.4401 5.5475 5.6554 5.7705 5.8763
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=ic-01-J analysis type=detector_ic
Measurement Started jan_ic_peak_hop3.py
11:05:22 -- ******* Measurement Started jan_ic_peak_hop3.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 0
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 0
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.096713
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.094844
GetGain CDD ===>> 0
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/d4/05ba8b-388f-406b-89ac-a44d22792665.h5
flush and close file /Users/jan/PychronDev/data/isotopes/d4/05ba8b-388f-406b-89ac-a44d22792665.h5
testing...
no interpolation path defined
setting detector H2 to PM41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
setting detector H2 to PM41 (40.964)
setting detector H1 to Ar40 (39.964)
setting detector AX to Ar39 (38.964)
setting detector L1 to Ar38 (37.964)
setting detector L2 to Ar37 (36.964)
setting detector CDD to Ar36 (35.964)
setting detector H2 to PM41 (40.9668)
setting detector H1 to Ar40 (39.9668)
setting detector AX to Ar39 (38.9668)
setting detector L1 to Ar38 (37.9668)
setting detector L2 to Ar37 (36.9668)
setting detector CDD to Ar36 (35.9668)
executed 183.8
unknown measurement script
load_hops ('hops/ic3_hops.yaml',) {}
[{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}]
define_hops ([{'counts': 10, 'settle': 8, 'positioning': {'detector': 'H1', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'H1', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'AX', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'AX', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}, {'counts': 10, 'settle': 8, 'positioning': {'detector': 'L2', 'isotope': 'Ar40'}, 'cup_configuration': [{'active': True, 'detector': 'L2', 'protect': False, 'isotope': 'Ar40', 'is_baseline': False}]}],) {}
*************** Set Analysis View Ar/Ar
_execute: Traceback (most recent call last):
  File "/Users/jan/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 391, in execute_snippet
    func(*argv)
  File "<string>", line 35, in main
  File "/Users/jan/Programming/git/pychron_dev/pychron/pyscripts/pyscript.py", line 135, in decorator
    return func(obj, *args, **kw)
  File "/Users/jan/Programming/git/pychron_dev/pychron/pyscripts/measurement_pyscript.py", line 307, in define_hops
    self._automated_run_call('py_define_hops', hops)
  File "/Users/jan/Programming/git/pychron_dev/pychron/pyscripts/measurement_pyscript.py", line 881, in _automated_run_call
    return func(*args, **kw)
  File "/Users/jan/Programming/git/pychron_dev/pychron/experiment/automated_run/automated_run.py", line 459, in py_define_hops
    hops = [(map_mass(hi[0]),) + tuple(hi) for hi in hops]
  File "/Users/jan/Programming/git/pychron_dev/pychron/experiment/automated_run/hop_util.py", line 92, in parse_hops
    d = parse_hop(args)
  File "/Users/jan/Programming/git/pychron_dev/pychron/experiment/automated_run/hop_util.py", line 30, in parse_hop
    defls = [ci['deflection'] for ci in cc if ci['deflection'] is not None]
KeyError: 'deflection'

Post Equilibration Started jan_pump_extraction_line.py
11:05:22 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
Post Measurement Started jan_pump_ms.py
testing...
11:05:22 -- ******* Post Measurement Started jan_pump_ms.py *******
no interpolation path defined
calculate duration
testing...
testing...
no interpolation path defined
no interpolation path defined
executed 0
executed 4.0
Pumping spectrometer
executed 4.0
open () {'name': 'O'}
Pump after analysis
opening name=O desc=---
doing GOSUB
testing...
no interpolation path defined
checking ownership. requestor=129.138.12.150
executed 4.0
check software interlocks O
Pump Microbone
interlocks []
actuate state mode=None-script, software_lock=False
close () {'description': 'Jan Inlet'}
doing actuation None-script open_channel False
closing name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Open O ===>> OK
Close R ===>> OK
GetValveState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
11:05:23 -- OPEN   VALVE-O (Jan Ion Pump)
---------------------------------------- open O () result=[(True, True)], time=0.41 sec
GetValveState R ===>> False
change switch state (False, False)
---------------------------------------- close None (Jan Inlet) result=[(False, False)]
locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
opening name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetValveState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
11:05:23 -- OPEN   VALVE-A (CO2 Laser to Jan)
---------------------------------------- open None (CO2 Laser to Jan) result=[(True, True)], time=0.13 sec
locked=[False]
executed 0
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
11:05:23 -- ******* Post Measurement Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
11:05:23 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
11:05:23 -- Automated run ic-01-J-63 failed duration: 62.748 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/IC.rem.txt
/Users/jan/PychronDev/experiments/rem/IC.ex.txt
doing event level: 3
