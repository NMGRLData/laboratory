do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000248908996582
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.38418579102e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.29425048828e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000140905380249
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000107049942017
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000125885009766
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=7.79628753662e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.48905944824e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000141143798828
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.70227813721e-05
executed snippet estimated_duration=174.0, duration=0.0092442035675
script duration name:air_x2 seconds:174.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000251054763794
executed snippet estimated_duration=4.0, duration=0.00174283981323
Script duration 798.0
Run total estimated duration= 799.000
run duration: 0:13:19
doing event level: 2
09:20:35 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4701721712
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run ba-01-F-694
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_air_x2.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-F-694
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
09:20:35 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),0,H2,0.114513531087716,H1,-0.0345880939673959,AX,0.0463534606918399,L1,-0.443038756902025...
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00000,0.11451,-0.03459,0.04635,-0.44304,-0.53671
09:20:35 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
09:20:35 -- ******* Pre Extraction Check Passed *******
=================================================================================
09:20:35 -- stopping status monitor
stop 4711230352
Alive clients [4673800528]
09:20:35 -- starting status monitor
start 4711230352
Monitor already running
start extraction
do extraction
Analysis started at 09:20:35.961944
Extraction Started felix_air_x2.py
09:20:35 -- ******* Extraction Started felix_air_x2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x118591a10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.39097595215e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000125169754028
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000107049942017
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000118970870972
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=7.89165496826e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=8.82148742676e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000112056732178
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.29832458496e-05
executed snippet estimated_duration=174.0, duration=0.0102429389954
Air Pipette x2
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.48498535156e-05
Waiting for minibone access
wait ('JanMiniboneFlag', 0) {}
waiting for JanMiniboneFlag = 0
Read JanMiniboneFlag ===>> 0
finished waiting
Minibone released
wait ('MinibonePumpTimeFlag', 0) {}
waiting for MinibonePumpTimeFlag = 0
Read MinibonePumpTimeFlag ===>> 0
finished waiting
acquire ('FelixMiniboneFlag',) {'clear': True}
acquire FelixMiniboneFlag
Set FelixMiniboneFlag 1 ===>> OK
FelixMiniboneFlag acquired
set extraction state False (0.75, 'red', 1.5)
minibone acquired
executed snippet estimated_duration=0, duration=0.0194528102875
WaitForMiniboneAccess.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000204801559448
Prepare for Air Shot
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=2
09:20:36 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Felix Ion Pump'}
open name=--- desc=Felix Ion Pump
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=2
09:20:36 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open None (Felix Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=2
09:20:37 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Quad Inlet'}
close name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Q ===>> OK
GetIndicatorState Q ===>> False
change switch state (True, True)
update switch state Q False args=() kw={} ncanvase=2
09:20:37 -- CLOSE  VALVE-Q (Quad Inlet)
-------------------------- close None (Quad Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=2
09:20:38 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=2
09:20:38 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=2
09:20:39 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=2
09:20:39 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Bone to CO2 Laser'}
close name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
GetIndicatorState D ===>> False
change switch state (True, True)
update switch state D False args=() kw={} ncanvase=2
09:20:39 -- CLOSE  VALVE-D (Bone to CO2 Laser)
-------------------------- close None (Bone to CO2 Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
close () {'description': 'Bone to Diode Laser'}
close name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=2
09:20:40 -- CLOSE  VALVE-B (Bone to Diode Laser)
-------------------------- close None (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.68252205849
PrepareForAirShot.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000137805938721
Evacuate Pipette 2
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=2
09:20:40 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:20:41 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:20:42 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0562429428
executed snippet estimated_duration=48.0, duration=17.2100579739
EvacPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00012993812561
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:20:58 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0476310253
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:21:14 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.8340079784
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=2.0, duration=0.000128984451294
Prepare for air expansion
close () {'description': 'Bone to Turbo'}
close name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
GetIndicatorState C ===>> False
change switch state (True, True)
update switch state C False args=() kw={} ncanvase=2
09:21:15 -- CLOSE  VALVE-C (Bone to Turbo)
-------------------------- close None (Bone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=2
09:21:17 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Bone'}
open name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open I ===>> OK
GetIndicatorState I ===>> OK
change switch state (True, True)
update switch state I True args=() kw={} ncanvase=2
09:21:17 -- OPEN   VALVE-I (Minibone to Bone)
-------------------------- open None (Minibone to Bone) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=3.0, duration=2.47208285332
PrepareForAirShotExpansion.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000141859054565
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:21:18 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02926206589
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:21:20 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0615999699
executed snippet estimated_duration=51.0, duration=17.9491949081
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:21:36 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
Shot 2
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000160932540894
Fill Pipette 2
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:21:37 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
not filling air pipette
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.041675806
close () {'description': 'Inner Pipette 2'}
close name=--- desc=Inner Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Z
interlocks ['Y']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close Z ===>> OK
GetIndicatorState Z ===>> False
change switch state (True, True)
update switch state Z False args=() kw={} ncanvase=2
09:21:54 -- CLOSE  VALVE-Z (Inner Pipette 2)
-------------------------- close None (Inner Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=51.0, duration=17.7957179546
FillPipette2.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000125169754028
Expand Pipette 2
close () {'description': 'Minibone to Turbo'}
close name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close P ===>> OK
GetIndicatorState P ===>> False
change switch state (True, True)
update switch state P False args=() kw={} ncanvase=2
09:21:55 -- CLOSE  VALVE-P (Minibone to Turbo)
-------------------------- close None (Minibone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02000188828
open () {'description': 'Outer Pipette 2'}
open name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Y ===>> OK
GetIndicatorState Y ===>> OK
change switch state (True, True)
update switch state Y True args=() kw={} ncanvase=2
09:21:57 -- OPEN   VALVE-Y (Outer Pipette 2)
-------------------------- open None (Outer Pipette 2) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Join finished
block finished. duration 15.0401039124
executed snippet estimated_duration=51.0, duration=17.8738529682
ExpandPipette2.py completed successfully
gosub finished
close () {'description': 'Outer Pipette 2'}
close name=--- desc=Outer Pipette 2
checking ownership. requestor=129.138.12.137
check software interlocks Y
interlocks ['Z']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Y ===>> OK
GetIndicatorState Y ===>> False
change switch state (True, True)
update switch state Y False args=() kw={} ncanvase=2
09:22:13 -- CLOSE  VALVE-Y (Outer Pipette 2)
-------------------------- close None (Outer Pipette 2) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
executed snippet estimated_duration=176.0, duration=98.7067518234
felix_air_x2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> z[19][178]N[00][00][00][00][128][129][163]=[00][00][250]D[129]#[05]@[00][00][250]D[132][190][130]...
GetOutputBlob ===>> z[19][178]N[00][00][00][00][128][129][163]=[193][250][170]A[129]#[05]@[00][00][00][00][132][190][...
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
create new session 4672135632
close session 4672135632
Extraction Finished
09:22:14 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
09:22:14 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 397.860465116279
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4924 3.5636 3.6379 3.7149 3.8107 3.7973
Ar39     3.4234 3.4937 3.5665 3.6448 3.7359 3.7221
Ar36     3.2133 3.2796 3.3480 3.4197 3.5165 3.4938
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 398.64365500824
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=ba-01-F analysis type=blank_air
Measurement Started felix_analysis400_120.py
09:22:15 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.96484
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
testing...
no interpolation path defined
executed snippet estimated_duration=655.442112, duration=0.000226020812988
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56995459e-01]
H2 map mass to dac 39.9624 >> 3.49245
GetHighVoltage ===>> 9000
positioning Ar40 (3.49245) on H2
setting magnet DAC
current  : 3.485529
requested: 3.492450
Delta Dac: 0.006921
Checking detector protection. dv=0.00692
SetMagnetDAC 3.49245 ===>> OK
Magnet settling time: 0.500
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x11df48a10>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x11affa470>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x11afd5bf0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 30.0}
Equilibration Started
09:22:16 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=2
09:22:16 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=2
09:22:19 -- OPEN   VALVE-H (Felix Inlet)
equilibrating for 30.0sec
set_time_zero () {}
sniff (30.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
measuring sniff. ncounts=30.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
check iteration duration=2.19345092773e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.282969786797806,H1,-0.125020207484739,AX,-0.0649878506888611,L1,-...
check iteration duration=2.40802764893e-05
GetData ===>> L2(CDD),0.00110071301372752,H2,0.330189374936394,H1,0.121935802089337,AX,0.0227310554969008,L1,-0...
check iteration duration=2.71797180176e-05
GetData ===>> L2(CDD),0.000786223551241894,H2,0.403646598066189,H1,-0.166154246569493,AX,-0.155450347738785,L1,...
check iteration duration=2.50339508057e-05
GetData ===>> L2(CDD),0.00110071301372752,H2,0.327041331484653,H1,-0.166154246569493,AX,-0.0473300469529015,L1,...
check iteration duration=2.19345092773e-05
GetData ===>> L2(CDD),0.00110071301372752,H2,0.359804798130288,H1,-0.0217177774672494,AX,-0.025200004296096,L1,...
check iteration duration=3.50475311279e-05
GetData ===>> L2(CDD),0.00220142632137721,H2,0.300458257396708,H1,0.0595300590375761,AX,0.172387644079524,L1,-0...
check iteration duration=2.38418579102e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.505563054523454,H1,-0.0950303191192174,AX,0.0401611236454942,L1,-...
check iteration duration=2.40802764893e-05
GetData ===>> L2(CDD),0.00125795775396796,H2,0.439910848077704,H1,-0.128467261341983,AX,0.0655040885088949,L1,-...
check iteration duration=2.90870666504e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.301624166553165,H1,-0.1251351094781,AX,-0.228249857408729,L1,-0....
check iteration duration=3.00407409668e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.442126392452641,H1,0.0263175987877003,AX,0.147615291252713,L1,-0...
check iteration duration=2.90870666504e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,0.446907321093056,H1,0.134003676789057,AX,-0.149603219058431,L1,-0...
check iteration duration=2.28881835938e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.320512088472061,H1,-0.0264292525399244,AX,0.255425551155125,L1,-...
check iteration duration=3.00407409668e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.557574857104823,H1,-0.0217177774672494,AX,-0.102251632919751,L1,...
check iteration duration=3.19480895996e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.476642889608086,H1,-0.32021895295601,AX,-0.109360252108907,L1,-0....
check iteration duration=3.2901763916e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.394551595078376,H1,0.109983008344145,AX,-0.231345147570414,L1,-0....
check iteration duration=3.2901763916e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.567137866119825,H1,-0.0197642322731482,AX,-0.301043860079601,L1,-...
check iteration duration=3.91006469727e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.651109763783607,H1,-0.0545827093342921,AX,-0.188239469953551,L1,...
check iteration duration=2.38418579102e-05
GetData ===>> L2(CDD),0.00125795775396796,H2,0.465564827080014,H1,-0.0259695974483657,AX,-0.0624653271335756,L1...
check iteration duration=3.19480895996e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.544046857647085,H1,-0.118700576750909,AX,0.243152923139385,L1,-0...
check iteration duration=3.40938568115e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,0.472328260867849,H1,0.0698732732463744,AX,0.0230750669461801,L1,-...
check iteration duration=3.21865081787e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.521539479934057,H1,-0.353303465096621,AX,-0.191793468537489,L1,-...
check iteration duration=2.38418579102e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.467897040345996,H1,-0.359276936608309,AX,0.0251391382242906,L1,-...
check iteration duration=2.50339508057e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.569470321521625,H1,0.194115434796084,AX,-0.470225654097543,L1,-0...
check iteration duration=2.40802764893e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.478275456795866,H1,-0.128352359745175,AX,-0.00777080420212174,L1...
check iteration duration=2.40802764893e-05
09:22:45 -- collecting point 25
GetData ===>> L2(CDD),0.00188693677491381,H2,0.589413042220645,H1,-0.0261994250217816,AX,-0.259890131997482,L1,...
check iteration duration=2.40802764893e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,0.573435508466083,H1,0.00494271014103722,AX,-0.164622242723755,L1,...
check iteration duration=2.90870666504e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,0.620902376213756,H1,-0.13042058639311,AX,-0.177577395448496,L1,-0...
check iteration duration=3.40938568115e-05
GetData ===>> L2(CDD),0.00220142632137721,H2,0.600959013680636,H1,-0.114104455664551,AX,-0.0659051303424829,L1,...
check iteration duration=2.90870666504e-05
GetData ===>> L2(CDD),0.00220142632137721,H2,0.63128241580599,H1,-0.0879061472753912,AX,-0.0949136483566326,L1,...
Equilibration Finished
09:22:50 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=2
09:22:50 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
09:22:50 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000247001647949
executed snippet estimated_duration=4.0, duration=0.00214004516602
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000196933746338
Pump Bone
close () {'description': 'Felix Inlet'}
close name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=2
09:22:50 -- CLOSE  VALVE-H (Felix Inlet)
-------------------------- close None (Felix Inlet) result=[(True, True)]
check iteration duration=2.90870666504e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.745353475753809,H1,-0.186950397568679,AX,-0.109360252108907,L1,-0...
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
close name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.137
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
open name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
check iteration duration=2.69412994385e-05
waiting for write to finish
Open C ===>> OK
measurement finished
estimated time: 31.457 actual time: :31.598
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
GetIndicatorState C ===>> OK
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=2
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /signal/Ar40 (Group) u'' table H2
09:22:52 -- OPEN   VALVE-C (Bone to Turbo)
-------------------------- open None (Bone to Turbo) result=[(True, True)]
add group /signal/Ar39 (Group) u'' table H1
add group /signal/Ar38 (Group) u'' table AX
add group /signal/Ar37 (Group) u'' table L1
add group /signal/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
measuring signal. ncounts=400
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
open name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=2
09:22:52 -- OPEN   VALVE-N (Bone to Getter GP-50)
-------------------------- open None (Bone to Getter GP-50) result=[(True, True)]
starting measurement
check iteration duration=6.50882720947e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.63291524104564,H1,-0.0210282913800448,AX,-0.163934353631753,L1,-0...
============ Exception ==============
RuntimeError: module compiled against API version 0xa but this version of numpy is 0x9
============ End Exception ==========
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
open name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=2
09:22:53 -- OPEN   VALVE-B (Bone to Diode Laser)
-------------------------- open None (Bone to Diode Laser) result=[(True, True)]
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.501598142638588,H1,-0.0301064853878096,AX,-0.159119116222804,L1,...
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
open name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=2
09:22:54 -- OPEN   VALVE-D (Bone to CO2 Laser)
-------------------------- open None (Bone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,0.613088261757958,H1,-0.249336160343535,AX,-0.115551587329556,L1,-...
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.80788803101
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 1
Get Resource Value FelixMiniboneFlag=1.0
Pump minibone
open () {'description': 'Bone to Minibone'}
open name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open E ===>> OK
GetIndicatorState E ===>> OK
change switch state (True, True)
update switch state E True args=() kw={} ncanvase=2
09:22:55 -- OPEN   VALVE-E (Bone to Minibone)
-------------------------- open None (Bone to Minibone) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Minibone to Turbo'}
open name=--- desc=Minibone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks P
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open P ===>> OK
GetIndicatorState P ===>> OK
change switch state (True, True)
update switch state P True args=() kw={} ncanvase=2
09:22:55 -- OPEN   VALVE-P (Minibone to Turbo)
-------------------------- open None (Minibone to Turbo) result=[(True, True)]
check iteration duration=5.72204589844e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,0.549877868960266,H1,-0.126743735952979,AX,-0.171271811925417,L1,-...
action=open, ok=True, locked=[False]
open () {'description': 'Quad Inlet'}
open name=--- desc=Quad Inlet
checking ownership. requestor=129.138.12.137
check software interlocks Q
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Q ===>> OK
GetIndicatorState Q ===>> OK
change switch state (True, True)
update switch state Q True args=() kw={} ncanvase=2
09:22:56 -- OPEN   VALVE-Q (Quad Inlet)
-------------------------- open None (Quad Inlet) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Minibone to Bone'}
close name=--- desc=Minibone to Bone
checking ownership. requestor=129.138.12.137
check software interlocks I
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close I ===>> OK
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.553959597556422,H1,-0.135591133610419,AX,-0.20027715403079,L1,-0...
GetIndicatorState I ===>> False
change switch state (True, True)
update switch state I False args=() kw={} ncanvase=2
09:22:57 -- CLOSE  VALVE-I (Minibone to Bone)
-------------------------- close None (Minibone to Bone) result=[(True, True)]
action=close, ok=True, locked=[False]
set_resource () {'name': 'MinibonePumpTimeFlag', 'value': 30}
Set MinibonePumpTimeFlag 30 ===>> OK
release ('FelixMiniboneFlag',) {}
release FelixMiniboneFlag
Set FelixMiniboneFlag 0 ===>> OK
executed snippet estimated_duration=0, duration=1.95050287247
PumpMinibone.py completed successfully
gosub finished
executed snippet estimated_duration=4.0, duration=6.77007913589
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
09:22:57 -- ******* Post Equilibration Finished *******
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.532851413339782,H1,-0.0185001715099814,AX,0.0403904687515258,L1,...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00188693677491381,H2,0.733455872873054,H1,-0.0828502514644611,AX,-0.0981240234875602,L1...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.60224190780882,H1,-0.0430916017283705,AX,-0.118876547212444,L1,-...
check iteration duration=6.91413879395e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,0.493551753204874,H1,-0.0729681967695527,AX,-0.311016782723547,L1,...
set states for children of L. state=True
handle state [('L', True)]
update switch state L True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,0.579383319013454,H1,0.245265100009557,AX,-0.0624653271335756,L1,-...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.61320488987295,H1,0.0698732732463744,AX,-0.219078568846134,L1,-0...
set states for children of L. state=False
handle state [('L', False)]
update switch state L False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.31809234619e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.756318061400501,H1,-0.219350137133243,AX,-0.215066102614161,L1,-0...
check iteration duration=5.00679016113e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.754685030219662,H1,-0.304595316590732,AX,-0.153386659319859,L1,-...
check iteration duration=6.41345977783e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.71421005684618,H1,-0.0844589484607598,AX,-0.0363224209489443,L1,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00855493545532
GetData ===>> L2(CDD),0.00235867110360653,H2,0.539498692946766,H1,-0.195912136547474,AX,-0.0631532887592169,L1,...
check iteration duration=5.88893890381e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.561889861795483,H1,-0.139727551428128,AX,-0.00261078309132295,L1,...
check iteration duration=5.48362731934e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.850674079317932,H1,-0.0509055697943436,AX,-0.204748255478786,L1,...
check iteration duration=6.60419464111e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.789140248693106,H1,0.0474631159619084,AX,-0.197411052432344,L1,-...
check iteration duration=6.41345977783e-05
GetData ===>> L2(CDD),0.0014152025002068,H2,0.451921490865281,H1,0.274117006320814,AX,-0.226300965902748,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,0.77474817367158,H1,-0.0358521336480915,AX,-0.0208427338643753,L1,...
check iteration duration=5.3882598877e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,0.713626856208933,H1,-0.0214879488260737,AX,-0.0479033573575924,L1...
check iteration duration=6.00814819336e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.754335095321128,H1,-0.074232186156063,AX,-0.135386522692313,L1,-...
check iteration duration=6.50882720947e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,0.697647293999446,H1,0.107109762696656,AX,0.169405753040524,L1,-0....
check iteration duration=6.19888305664e-05
GetData ===>> L2(CDD),0.00283040548628499,H2,0.70476224932317,H1,0.0442452899683569,AX,-0.157514031732116,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00778722763062
09:23:18 -- collecting point 25
GetData ===>> L2(CDD),0.00220142632137721,H2,0.779880671794908,H1,-0.146621541704035,AX,-0.219422493744647,L1,-...
check iteration duration=6.79492950439e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.850907169365826,H1,-0.00654896970057536,AX,-0.231115867159245,L1...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.01151941142997,H1,-0.239800476278637,AX,0.014016139797283,L1,-0....
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0.00188693677491381,H2,0.683184265603203,H1,-0.00827270986911651,AX,-0.107181809873104,L1...
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,0.731589595351039,H1,0.321707294930493,AX,-0.0770270765733949,L1,-...
check iteration duration=5.3882598877e-05
GetData ===>> L2(CDD),0.00172969201067973,H2,0.861862464258419,H1,-0.214639604315515,AX,-0.197411052432344,L1,-...
set states for children of L. state=True
handle state [('L', True)]
update switch state L True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.945429760100856,H1,0.0811360104029235,AX,-0.188583405874055,L1,-...
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=5.57899475098e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,0.731123026526551,H1,0.106994833048659,AX,-0.160036306158261,L1,-0...
check iteration duration=6.79492950439e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.900789716982871,H1,0.0122974570873911,AX,-0.11601020316888,L1,-0...
set states for children of T. state=False
handle state [('T', False)]
update switch state T False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=9.98973846436e-05
GetData ===>> L2(CDD),0.00125795775396796,H2,0.684233994339852,H1,0.124234433250178,AX,-0.136418386755509,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.011559009552
GetData ===>> L2(CDD),0.00267316068606042,H2,0.519790223557489,H1,0.00540238018230389,AX,0.0559860641786928,L1,...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.844846846158555,H1,-0.00333131314469065,AX,-0.140660482945651,L1,...
check iteration duration=6.69956207275e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,1.01897954658775,H1,-0.136855040936891,AX,-0.207041119958704,L1,-0...
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00157244725244406,H2,0.822820218306546,H1,-0.077449606211511,AX,-0.041367598496276,L1,-...
check iteration duration=6.60419464111e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.851956075269736,H1,0.0956168656853735,AX,0.0927972585302934,L1,-...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,0.796482150181933,H1,0.0344769553844155,AX,-0.0782883200932937,L1,-...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00283040548628499,H2,0.842399418579175,H1,-0.106865520543585,AX,-0.164163650050681,L1,-...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,0.819557056347676,H1,-0.0540081572055431,AX,-0.187666243146166,L1,...
check iteration duration=6.79492950439e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,0.73088974219751,H1,0.0626330116551853,AX,-0.164851538978329,L1,-0...
check iteration duration=6.41345977783e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,0.762850213378458,H1,0.0996393640640299,AX,-0.237994255733931,L1,-...
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0140869617462
GetData ===>> L2(CDD),0.00345938474716741,H2,0.934590084624688,H1,-0.0381503833695316,AX,-0.0589108509016721,L1...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.766349598446918,H1,-0.0366565216735982,AX,-0.153845257128735,L1,...
check iteration duration=5.69820404053e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.899158004637018,H1,-0.0509055697943436,AX,-0.0102934711208725,L1...
set states for children of Z. state=True
handle state [('Z', True)]
update switch state Z True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,0.903936598475987,H1,-0.012179842846666,AX,-0.36787193058853,L1,-0...
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.19888305664e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,0.843098682977238,H1,0.123659774946173,AX,-0.11039214407855,L1,-0....
check iteration duration=5.29289245605e-05
09:23:44 -- collecting point 50
GetData ===>> L2(CDD),0.00298765029250797,H2,0.867689798745992,H1,0.0972258630238175,AX,0.0403904687515258,L1,-...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,1.00126181844236,H1,-0.210388615926884,AX,-0.0382716972273721,L1,-...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,1.11876432155692,H1,0.0791822608568674,AX,-0.0208427338643753,L1,-...
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.054299395947,H1,0.152622979614011,AX,-0.0136187946835136,L1,-0.3...
set states for children of Z. state=False
handle state [('Z', False)]
update switch state Z False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.89029693604e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,0.843797947874738,H1,-0.207516315868091,AX,-0.438019217435597,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0222630500793
GetData ===>> L2(CDD),0.00188693677491381,H2,1.02620660675334,H1,0.0393036495215477,AX,0.00094391421259826,L1,-...
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.19888305664e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.986341875114977,H1,0.0828599103472337,AX,-0.15006181866986,L1,-0...
check iteration duration=5.79357147217e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.39159238804804,H1,-0.200737653816012,AX,-0.101105076519909,L1,-0....
check iteration duration=5.79357147217e-05
GetData ===>> L2(CDD),0.00267316068606042,H2,0.899158004637018,H1,-0.186950397568679,AX,0.0172268890313119,L1,-...
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,0.897409744428389,H1,0.0834345443466354,AX,-0.0771417351432655,L1,...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00487458843506026,H2,0.797414459074384,H1,-0.00149264743701414,AX,-0.0571909383348566,L...
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=2
check iteration duration=5.60283660889e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,0.9755017464633,H1,-0.000458396435770312,AX,-0.0590255116303747,L1...
refresh_canvas_needed fired
check iteration duration=6.69956207275e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,1.10069506238934,H1,0.183655949606338,AX,0.0714672360484073,L1,-0....
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=5.60283660889e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.03331715351898,H1,0.176989523713505,AX,-0.0351757859997572,L1,-0...
check iteration duration=7.48634338379e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,0.958017921011985,H1,-0.219005464780309,AX,-0.25874376340086,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0159590244293
GetData ===>> L2(CDD),0.00283040548628499,H2,1.20725022030419,H1,0.0136764783823923,AX,-0.131029751117517,L1,-0...
check iteration duration=6.00814819336e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.08274270947205,H1,0.0234446023307924,AX,-0.117730010619529,L1,-0...
check iteration duration=5.69820404053e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,0.954870865603205,H1,-0.166039349461818,AX,-0.175628401316667,L1,-...
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.0020441815451463,H2,0.94508009127593,H1,-0.229920029482995,AX,-0.266882950864297,L1,-0....
check iteration duration=5.79357147217e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.0305195551845,H1,-0.000458396435770312,AX,-0.236045383962851,L1,...
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.91413879395e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.11608305556909,H1,0.275151552850714,AX,-0.104086120317859,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,1.15805153946322,H1,-0.210273724088595,AX,-0.250031317435322,L1,-0...
check iteration duration=5.29289245605e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,1.04054431956565,H1,-0.173507632972218,AX,0.0609170770807427,L1,-0...
check iteration duration=0.000110149383545
GetData ===>> L2(CDD),0.00424560895823481,H2,0.973520230550916,H1,0.147450915003574,AX,-0.112341270335778,L1,-0...
check iteration duration=0.000111818313599
GetData ===>> L2(CDD),0.0014152025002068,H2,0.99158714176348,H1,-0.0288424381775224,AX,-0.123921291993335,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00581097602844
09:24:10 -- collecting point 75
GetData ===>> L2(CDD),0.00377387441359912,H2,0.865358860786908,H1,0.0113781106522869,AX,-0.212200045062644,L1,-...
set states for children of U. state=True
handle state [('U', True)]
update switch state U True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=9.58442687988e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,0.893913233381764,H1,0.0367753781519249,AX,0.0524311635722441,L1,-0...
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,1.17285751738985,H1,-0.0357372210186945,AX,-0.0667077493219018,L1,...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,1.00802249265047,H1,-0.0116052654599564,AX,-0.137106295515944,L1,-...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.08017811450872,H1,0.179058409577991,AX,-0.112914542012932,L1,-0....
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.07714723821702,H1,0.165955540704006,AX,-0.0737019720974838,L1,-0...
check iteration duration=8.9168548584e-05
GetData ===>> L2(CDD),0.00235867110360653,H2,1.00184463334514,H1,-0.121573141307982,AX,-0.075307196382222,L1,-0...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.13799970597428,H1,-0.0838844141270074,AX,0.0815588006691064,L1,-...
check iteration duration=8.9168548584e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.038679239347,H1,0.348722150602583,AX,-0.18399758349413,L1,-0.487...
check iteration duration=8.41617584229e-05
GetData ===>> L2(CDD),0.00251591589183427,H2,1.06875409131857,H1,-0.142140453629706,AX,-0.080122853171614,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0168690681458
GetData ===>> L2(CDD),0.00314489510472937,H2,1.07306722726176,H1,0.0966512208090497,AX,-0.304253547612561,L1,-0...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00188693677491381,H2,1.31964700641751,H1,-0.0409082758071,AX,0.0538072525716509,L1,-0.5...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.11118684967659,H1,0.0321785380926029,AX,-0.261265772511218,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.25750071502928,H1,0.203080798076152,AX,-0.142150944735226,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.04066088719711,H1,-0.130190783651322,AX,-0.247050725706778,L1,-0...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.18090180402714,H1,-0.0645798615965627,AX,-0.193627785251504,L1,-0...
check iteration duration=8.9168548584e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.11223603459182,H1,-0.112955421971107,AX,-0.1584312231972,L1,-0.8...
check iteration duration=6.00814819336e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.16283139761773,H1,0.0573465057710949,AX,-0.286600133691699,L1,-0....
check iteration duration=7.00950622559e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.07213465571729,H1,-0.0284976977418334,AX,-0.126329001770667,L1,-...
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.2430432317731,H1,-0.121917848480297,AX,-0.0646438705936208,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0145862102509
GetData ===>> L2(CDD),0.00345938474716741,H2,1.09801384590544,H1,0.0155151765093469,AX,0.0697470935434231,L1,-0...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00314489510472937,H2,1.23394911785066,H1,-0.0187300008626399,AX,-0.167144498519313,L1,-...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.28956444392579,H1,-0.0291871784900248,AX,-0.0390743392533552,L1,...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.0166482482421,H1,-0.199933402614581,AX,-0.105691293922939,L1,-0....
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00424560895823481,H2,1.27813797643746,H1,-0.34193079206104,AX,-0.295197615992089,L1,-0....
check iteration duration=8.60691070557e-05
09:24:36 -- collecting point 100
GetData ===>> L2(CDD),0.00314489510472937,H2,1.66624615219104,H1,0.103891737731296,AX,0.239597331172988,L1,-0.4...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.18521543424012,H1,-0.155009163428817,AX,-0.199474646443774,L1,-0...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.21727679511911,H1,-0.19981850953093,AX,0.148532774432204,L1,-0.4...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.17752086390779,H1,0.0332128251960818,AX,0.150826486206817,L1,-0.2...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00283040548628499,H2,1.08320900018739,H1,0.183885827183005,AX,-0.247509278880983,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0191969871521
GetData ===>> L2(CDD),0.0045600986846507,H2,1.21238008295808,H1,0.064816576887903,AX,-0.104888707455092,L1,-0.2...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.27242479271659,H1,-0.211537533555011,AX,-0.00547746490181514,L1,-...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,1.37701631631272,H1,-0.224290427323252,AX,-0.0420555752031795,L1,-...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00424560895823481,H2,1.40955040686685,H1,0.00172502598536177,AX,0.244070497391628,L1,-0...
check iteration duration=4.98294830322e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.26950991591076,H1,0.0503361839550795,AX,-0.220110343173426,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.33795351440009,H1,0.0350515605624442,AX,-0.260234042310147,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00424560895823481,H2,1.3053052043259,H1,-0.196601497635228,AX,-0.183195062330901,L1,-0....
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.36080797942698,H1,-0.00229706411550327,AX,-0.170813222421023,L1,-...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.39404118939547,H1,0.0268921991061793,AX,-0.141806992219434,L1,-0...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.21436208254813,H1,-0.152940989504735,AX,-0.0497379483582696,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0068199634552
GetData ===>> L2(CDD),0.00330213992294918,H2,1.21063126312372,H1,0.151358694593011,AX,-0.144214657248608,L1,-0....
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.39695643708329,H1,-0.144898048754662,AX,-0.22423742941807,L1,-0.4...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.50179451412956,H1,-0.0104561096603397,AX,0.0705498263296919,L1,-0...
check iteration duration=5.69820404053e-05
GetData ===>> L2(CDD),0.00283040548628499,H2,1.2880486803602,H1,0.0575763532508182,AX,-0.16164138644178,L1,-0.3...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.32874191663098,H1,-0.156043248728053,AX,-0.0344878043744096,L1,-0...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.25878324401805,H1,-0.00344622963529031,AX,0.239826723807095,L1,-...
set states for children of L. state=False
handle state [('L', False)]
update switch state L False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.43730435673054,H1,-0.109738120347444,AX,0.0759396209493486,L1,-0...
set states for children of P. state=True
handle state [('P', True)]
update switch state P True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,1.31486638237089,H1,0.19514989553757,AX,-0.268258581380851,L1,-0.5...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,1.2835014037486,H1,-0.033324052630216,AX,-0.00375745684050024,L1,-...
set states for children of Q. state=True
handle state [('Q', True)]
update switch state Q True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=0.000103950500488
GetData ===>> L2(CDD),0.00566081291605652,H2,1.41934582872608,H1,-0.130190783651322,AX,-0.020498737990062,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0158910751343
09:25:03 -- collecting point 125
GetData ===>> L2(CDD),0.00471734355685627,H2,1.37013648585797,H1,-0.020568633714851,AX,-0.204748255478786,L1,-0...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.59906257081348,H1,-0.0055147241212546,AX,-0.082416014601551,L1,-...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,1.50249424980644,H1,-0.0546976197191224,AX,-0.405697083310116,L1,-...
check iteration duration=0.000108957290649
GetData ===>> L2(CDD),0.0045600986846507,H2,1.60711036092158,H1,-0.0453898342011196,AX,0.0429132685251173,L1,-0...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00345938474716741,H2,1.38086437816306,H1,0.030454728718274,AX,-0.0446928146911617,L1,-0...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.48535086971693,H1,-0.00448047743261209,AX,-0.411542656076926,L1,...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.00298765029250797,H2,1.53701516422694,H1,-0.191661065618269,AX,-0.0590255116303747,L1,-...
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.37480077241282,H1,0.164231492258819,AX,-0.436758445319699,L1,-0.4...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.41631390196132,H1,-0.0954899413023939,AX,-0.217129658765989,L1,-...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,1.60781017188372,H1,-0.109163601071161,AX,-0.184800103988187,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0193011760712
GetData ===>> L2(CDD),0.00330213992294918,H2,1.43765420145669,H1,-0.162707327394807,AX,-0.109016287873314,L1,-0...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.43124040134007,H1,0.216184171207192,AX,-0.240860236462998,L1,-0....
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.57935159624825,H1,-0.0304512252484851,AX,-0.104544741621266,L1,-...
check iteration duration=6.50882720947e-05
GetData ===>> L2(CDD),0.0039311192558126,H2,1.28664951607588,H1,-0.0191896594042794,AX,-0.1098188708987,L1,-0.2...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.2169270291523,H1,-0.0520546774061583,AX,-0.0921618897200949,L1,-0...
check iteration duration=0.000113964080811
GetData ===>> L2(CDD),0.00550356800786043,H2,1.56092394349833,H1,-0.0881359600919128,AX,0.0773157435616497,L1,-...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,1.35626036477658,H1,-0.228311575075977,AX,-0.0872316358192628,L1,-...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00424560895823481,H2,1.63440335915708,H1,0.0890659756551545,AX,-0.117386049375439,L1,-0...
check iteration duration=0.000102996826172
GetData ===>> L2(CDD),0.00487458843506026,H2,1.44908253127536,H1,0.0940078710300403,AX,0.0399317785937486,L1,-0...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.64116840802329,H1,0.110442728441579,AX,-0.119908428977807,L1,-0.5...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0162599086761
GetData ===>> L2(CDD),0.00550356800786043,H2,1.55042733434898,H1,0.0412573183004885,AX,-0.32832586285527,L1,-0....
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.32874191663098,H1,0.0949272962188556,AX,0.0104613942106251,L1,-0....
check iteration duration=7.48634338379e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.34121840530378,H1,-0.188788709788309,AX,-0.126787612473976,L1,-0...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.57573601677242,H1,-0.350316715466327,AX,-0.26309995680297,L1,-0.5...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.76738013252849,H1,-0.0520546774061583,AX,-0.157284733728848,L1,-0...
check iteration duration=9.89437103271e-05
09:25:29 -- collecting point 150
GetData ===>> L2(CDD),0.00471734355685627,H2,1.55894124203695,H1,0.223310641839924,AX,-0.188812696419617,L1,-0....
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.39334153124252,H1,0.0436706793137746,AX,-0.0333411672394611,L1,-0...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.5760859109768,H1,0.0490720329839927,AX,-0.168176328530624,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.55859135396066,H1,-0.083080065485426,AX,-0.202913959961977,L1,-0....
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.5176553122976,H1,0.15331259032425,AX,0.0192909477669945,L1,-0.37...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0131549835205
GetData ===>> L2(CDD),0.0039311192558126,H2,1.59707979210435,H1,0.059644983030345,AX,-0.244872595143198,L1,-0.5...
check iteration duration=9.29832458496e-05
GetData ===>> L2(CDD),0.00361662957738405,H2,1.64933318443197,H1,0.0237893614542058,AX,0.0239924314119187,L1,-0...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00330213992294918,H2,1.37398452066128,H1,-0.0020672308467972,AX,-0.115666241309904,L1,-...
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.61084269183464,H1,-0.0242458889038529,AX,-0.0121281338173882,L1,...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.47263930553968,H1,0.137451668717831,AX,-0.393776589580436,L1,-0....
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.29119680731367,H1,0.133314079882356,AX,-0.293363492880498,L1,-0.3...
check iteration duration=9.79900360107e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,1.37141916244504,H1,0.119522245265103,AX,0.00564530823125921,L1,-0...
check iteration duration=7.82012939453e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.76283062872006,H1,0.0455094346142952,AX,-0.125067821209973,L1,-0...
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.75314842175821,H1,-0.091812957705291,AX,-0.0795495619600327,L1,-...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.72340248129561,H1,-0.155124061850196,AX,-0.360994470339439,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0147080421448
GetData ===>> L2(CDD),0.00440285381844355,H2,1.67009535118857,H1,0.0709076007666176,AX,-0.12082565628536,L1,-0....
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,1.51835505931216,H1,-0.0776794215194006,AX,0.117109473524893,L1,-0...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.66356338608273,H1,0.010114010734643,AX,-0.0841358820885067,L1,-0....
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.72806845140535,H1,0.0434408351474487,AX,-0.241777348493489,L1,-0....
check iteration duration=5.79357147217e-05
GetData ===>> L2(CDD),0.00377387441359912,H2,1.65633161841067,H1,0.0884913383016502,AX,-0.359045847665442,L1,-0...
check iteration duration=7.08103179932e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,1.66939549569946,H1,0.110672588573099,AX,-0.171042517200256,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,1.97878039148251,H1,-0.1802864864001,AX,-0.154877101399537,L1,-0.6...
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.55590888286359,H1,-0.117896257141724,AX,-0.100073174592409,L1,-0...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00534632310566276,H2,1.48325170095078,H1,0.05872559146975,AX,-0.00261078309132295,L1,-0...
check iteration duration=5.41210174561e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.56337316849491,H1,-0.00758321417121687,AX,-0.0881488942716187,L1...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00810790061951
09:25:55 -- collecting point 175
GetData ===>> L2(CDD),0.00471734355685627,H2,1.78266195394514,H1,-0.148230132345332,AX,-0.456815987608805,L1,-0...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.69762339729014,H1,0.272737612673939,AX,-0.19832820587283,L1,-0.5...
check iteration duration=9.20295715332e-05
GetData ===>> L2(CDD),0.00644703754701332,H2,1.52698531362206,H1,-0.141795753684479,AX,-0.151437616194231,L1,-0...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.75664800358541,H1,-0.0240160608653273,AX,0.0715819123245055,L1,-0...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.68187632701507,H1,-0.18775465959596,AX,-0.132176271865746,L1,-0....
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.72270258769732,H1,0.0196522601102008,AX,-0.0562736503752559,L1,-...
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.65201591154352,H1,-0.208895020963514,AX,-0.0569616164267061,L1,-0...
set states for children of T. state=True
handle state [('T', True)]
update switch state T True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.66811242860244,H1,0.180092854173895,AX,-0.0282959476150999,L1,-0...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00534632310566276,H2,1.92289255125629,H1,0.119522245265103,AX,-0.141119086819177,L1,-0....
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,1.95952847882266,H1,0.00195486021213802,AX,-0.297719529562424,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0168330669403
GetData ===>> L2(CDD),0.00534632310566276,H2,1.86969122467023,H1,-0.173737425393757,AX,-0.0448074771138454,L1,-...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,1.63288706151448,H1,0.0682643215298095,AX,-0.025200004296096,L1,-0...
check iteration duration=9.82284545898e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,1.57480296617221,H1,-0.0707849384725685,AX,-0.0356344401432305,L1,...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.78872808659878,H1,-0.256229367223542,AX,0.0627518790288761,L1,-0...
check iteration duration=7.48634338379e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,1.7071884080746,H1,0.00172502598536177,AX,-0.195347453995746,L1,-0...
check iteration duration=5.29289245605e-05
GetData ===>> L2(CDD),0.0040883641040245,H2,1.88392462967182,H1,0.00850515869036892,AX,-0.20325789063768,L1,-0....
check iteration duration=8.41617584229e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,1.97854703269893,H1,0.124579228396558,AX,-0.113029196307455,L1,-0....
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.00487458843506026,H2,1.62717180689399,H1,-0.073427829465364,AX,-0.196035320632988,L1,-0...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,1.76236401414015,H1,0.0311442520984458,AX,0.0671095476735419,L1,-0...
check iteration duration=6.69956207275e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,1.93350982868153,H1,-0.039184593957867,AX,-0.0912446350931956,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00727295875549
GetData ===>> L2(CDD),0.0039311192558126,H2,1.86385792174435,H1,-0.079288127139402,AX,0.0761689745817092,L1,-0....
check iteration duration=9.3936920166e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,1.79187782414765,H1,-0.0729681967695527,AX,-0.287287935102545,L1,-...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00550356800786043,H2,1.82442570553046,H1,0.0758494031170028,AX,-0.381855948170482,L1,-0...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.81765939020263,H1,-0.190052547407249,AX,0.137064297550521,L1,-0.5...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,2.00480024467414,H1,0.031029331500913,AX,-0.192710627331777,L1,-0....
check iteration duration=0.000117063522339
09:26:21 -- collecting point 200
GetData ===>> L2(CDD),0.0045600986846507,H2,1.83842512708762,H1,-0.143863951506542,AX,-0.154418504082441,L1,-0....
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00440285381844355,H2,1.93490991781398,H1,-0.0929620165851406,AX,-0.171501106595436,L1,-...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.58564973432253,H1,0.00873499453271022,AX,-0.271697649068965,L1,-0...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,2.00433351475974,H1,0.198827987158683,AX,-0.286714767294262,L1,-0....
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,1.94494394851592,H1,-0.148459930789515,AX,0.0465828072734262,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0113129615784
GetData ===>> L2(CDD),0.00691877239756847,H2,1.83119206762173,H1,-0.0360819588670372,AX,0.061375777239976,L1,-0...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,1.92884287936823,H1,-0.451861014118726,AX,-0.124265250901842,L1,-0...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00566081291605652,H2,1.82967546515597,H1,-0.00815779395353029,AX,-0.296000043754037,L1,...
check iteration duration=9.51290130615e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,1.98473105925331,H1,-0.00804287802444716,AX,0.00587464511231357,L1,...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,1.83352530677216,H1,0.19514989553757,AX,-0.0592548330467449,L1,-0....
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,1.94786083719762,H1,0.0530943372790984,AX,-0.156940786622212,L1,-0...
check iteration duration=6.50882720947e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,1.96641245259849,H1,-0.130075882259754,AX,0.020896329843959,L1,-0....
check iteration duration=0.000138998031616
GetData ===>> L2(CDD),0.00518907820946351,H2,2.20294718806128,H1,0.232621110208072,AX,-0.28786110256951,L1,-0.6...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.09908424910655,H1,0.145841833891192,AX,-0.0679690063662929,L1,-0...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,2.02276951554756,H1,-0.16638404074328,AX,0.223081205216102,L1,-0.44...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0158498287201
GetData ===>> L2(CDD),0.00707601735975037,H2,1.94331049464997,H1,0.142393811974093,AX,-0.211856117582552,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00424560895823481,H2,1.86665790281139,H1,0.081595716753593,AX,-0.313767915608457,L1,-0....
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00691877239756847,H2,1.92930957329861,H1,-0.21429493027953,AX,0.0229603964494087,L1,-0....
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,2.06360999400223,H1,-0.0572256447201002,AX,0.000829246352547077,L1...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00534632310566276,H2,1.82804220358931,H1,-0.0943408854340809,AX,0.12341698812512,L1,-0....
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,1.85172476298479,H1,-0.0489520837122295,AX,-0.0670517286797923,L1,...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00487458843506026,H2,1.98379761878003,H1,-0.190052547407249,AX,-0.167488441978952,L1,-0...
check iteration duration=9.01222229004e-05
GetData ===>> L2(CDD),0.00566081291605652,H2,1.92907622630554,H1,0.0684941716103762,AX,-0.000202763771959291,L1...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,1.79537754442031,H1,0.138256201941101,AX,-0.151781565267988,L1,-0....
check iteration duration=0.00010085105896
GetData ===>> L2(CDD),0.00691877239756847,H2,2.00608375308581,H1,-0.22969025044616,AX,-0.235472185632131,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0154588222504
09:26:48 -- collecting point 225
GetData ===>> L2(CDD),0.00739050730210944,H2,1.84099170942053,H1,-0.33251090073211,AX,0.00862669194791661,L1,-0...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,2.05089091949386,H1,0.0938929429431922,AX,-0.326262545145712,L1,-0...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.0727118184629,H1,0.129981035114853,AX,-0.0324238565474714,L1,-0....
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,1.99616577727196,H1,0.03539632383371,AX,0.137293665749281,L1,-0.39...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,1.99313206355819,H1,-0.100086151086939,AX,-0.0170587724846826,L1,-...
check iteration duration=5.3882598877e-05
GetData ===>> L2(CDD),0.00534632310566276,H2,2.13607686423062,H1,0.0794121135393487,AX,-0.141692341353481,L1,-0...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00566081291605652,H2,2.1295417895757,H1,-0.165120172110675,AX,-0.0920472329397404,L1,-0...
check iteration duration=7.08103179932e-05
GetData ===>> L2(CDD),0.00487458843506026,H2,2.0639600626093,H1,-0.11663232497227,AX,-0.263902411331573,L1,-0.5...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,2.26398639152919,H1,-0.148574829990719,AX,-0.00685346913804811,L1,...
check iteration duration=6.103515625e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,2.10935335229126,H1,-0.04435563026593,AX,-0.1679470330679,L1,-0.32...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00430178642273
GetData ===>> L2(CDD),0.00487458843506026,H2,2.11682185861601,H1,-0.033324052630216,AX,0.104494568332149,L1,-0....
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,2.06979455782019,H1,0.0673449217536341,AX,-0.150864367464687,L1,-0...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.10048457501712,H1,0.122510459365859,AX,-0.176660222230791,L1,-0....
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.22243730417549,H1,-0.0690613100113247,AX,-0.0613187233319696,L1,...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,2.20376413124691,H1,0.258254098454535,AX,-0.0109814700418828,L1,-0...
check iteration duration=9.79900360107e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.2812601264205,H1,-0.201427011455186,AX,-0.186175851849374,L1,-0....
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,2.06197634215715,H1,-0.0569958245393783,AX,0.0817881556404516,L1,-...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00518907820946351,H2,2.31102301956168,H1,0.033787429621494,AX,0.0402757961914571,L1,-0....
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,2.14599625731687,H1,-0.0469985936737913,AX,0.105641371062837,L1,-0...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.097450538075,H1,0.0496466468564226,AX,-0.330962317935524,L1,-0.5...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0127389431
GetData ===>> L2(CDD),0.00597530275044398,H2,2.26421981834779,H1,-0.253242316957812,AX,-0.204748255478786,L1,-0...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,2.26188555266252,H1,0.0120676203962408,AX,0.0094293737574503,L1,-0...
check iteration duration=6.38961791992e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,2.25756717581323,H1,-0.0124096737054142,AX,0.0493349705162663,L1,-...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00691877239756847,H2,2.29398219358132,H1,-0.0675674961863361,AX,0.00885602953960521,L1,...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.00534632310566276,H2,2.19466108855088,H1,0.0801016719152189,AX,-0.302419441761795,L1,-0...
check iteration duration=7.79628753662e-05
09:27:14 -- collecting point 250
GetData ===>> L2(CDD),0.00644703754701332,H2,2.08823179119817,H1,0.220781888170448,AX,-0.191449533764259,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.1293083948593,H1,-0.225094658214967,AX,-0.0419409124526422,L1,-0...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.17692206898965,H1,0.152622979614011,AX,-0.210709691762025,L1,-0....
check iteration duration=0.000101089477539
GetData ===>> L2(CDD),0.00770499726846222,H2,2.39413047510388,H1,-0.0829651584821206,AX,-0.225727761767482,L1,-...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,2.39307991550143,H1,0.102512587460811,AX,-0.219422493744647,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0145390033722
GetData ===>> L2(CDD),0.00660428249119995,H2,2.19629496177794,H1,0.0706777501108232,AX,0.178924899068991,L1,-0....
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.25418251537852,H1,-0.0460793028748846,AX,-0.256794933652096,L1,-...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,2.3808234700755,H1,-0.164086096542749,AX,-0.184685458244143,L1,-0....
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.04342291603239,H1,0.0865375738585884,AX,-0.1978696292618,L1,-0.4...
check iteration duration=0.000167846679688
GetData ===>> L2(CDD),0.00597530275044398,H2,2.23434163777712,H1,-0.218201228811165,AX,-0.173564756168635,L1,-0...
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.197462015752,H1,-0.142370253524492,AX,-0.208875407608525,L1,-0.4...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00503183331926267,H2,2.20434766251152,H1,-0.128352359745175,AX,0.129953910510391,L1,-0....
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.34522228421521,H1,0.158484686360974,AX,-0.176545575517506,L1,-0....
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00644703754701332,H2,2.36448178144879,H1,-0.110427543026985,AX,-0.120023082439232,L1,-0...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.23982701667209,H1,-0.0813564589944539,AX,-0.099385239358977,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0161020755768
GetData ===>> L2(CDD),0.00770499726846222,H2,2.08729825205027,H1,0.0764240329402727,AX,-0.0758804901208828,L1,-...
check iteration duration=9.20295715332e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.36191382659979,H1,0.0820554233234275,AX,-0.209677907355908,L1,-0...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.26386967814037,H1,0.288026002468592,AX,0.00954404264209721,L1,-0...
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.38023983364335,H1,-0.30436555534418,AX,0.0440599978809456,L1,-0....
check iteration duration=8.58306884766e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.23842649147967,H1,0.0229849236921742,AX,-0.0154534510407441,L1,-...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,2.15918337077424,H1,0.0781479244641916,AX,-0.118073971740727,L1,-0...
check iteration duration=0.000119209289551
GetData ===>> L2(CDD),0.00628979260882512,H2,2.32479595861486,H1,-0.166843628925891,AX,-0.0636119295696952,L1,-...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.0045600986846507,H2,2.12919169752179,H1,0.0945825116699481,AX,-0.261265772511218,L1,-0....
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.1239403317283,H1,-0.206482285753225,AX,0.128004297433634,L1,-0.4...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00471734355685627,H2,2.03140421755803,H1,0.0792971871912525,AX,-0.0464127495945482,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00424194335938
09:27:40 -- collecting point 275
GetData ===>> L2(CDD),0.006761527441385,H2,2.20948275262978,H1,0.0588405153665406,AX,0.0872926913443424,L1,-0.3...
check iteration duration=7.82012939453e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.52148999391728,H1,-0.0927322049188603,AX,-0.00616546726571491,L1...
check iteration duration=9.29832458496e-05
GetData ===>> L2(CDD),0.006761527441385,H2,2.30950567371517,H1,-0.137889145698963,AX,-0.107984394428757,L1,-0.4...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00691877239756847,H2,2.46802266100742,H1,-0.24186846396069,AX,-0.121054962975892,L1,-0....
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.44502560116915,H1,0.0396484143128288,AX,-0.0610894024078071,L1,-...
check iteration duration=8.39233398438e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,2.39728216067316,H1,0.0948123680223181,AX,-0.405123986029453,L1,-0...
check iteration duration=6.60419464111e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,2.27554108585775,H1,0.0218357280531631,AX,-0.0999585187541528,L1,-...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00723326232793069,H2,2.36027967702,H1,0.0252833190777723,AX,-0.136074432190953,L1,-0.68...
check iteration duration=9.51290130615e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.70674295133494,H1,0.147565849471487,AX,-0.142494897128339,L1,-0....
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,2.46533769724412,H1,0.0679195465108293,AX,-0.00994947147602993,L1,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00800800323486
GetData ===>> L2(CDD),0.00691877239756847,H2,2.42483065892598,H1,-0.104222721168178,AX,-0.0497379483582696,L1,-...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.45086236725112,H1,-0.037345996589816,AX,-0.269978116761374,L1,-0...
check iteration duration=8.51154327393e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.38771040624426,H1,-0.238192038348627,AX,-0.126558307149999,L1,-0...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.23515860715466,H1,0.038958884853239,AX,-0.00306945275483509,L1,-...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.21064982232125,H1,-0.000688230087533061,AX,0.0948614793416706,L1...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.38794386255656,H1,0.0718270039382435,AX,0.125022543895848,L1,-0....
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,2.45378076333643,H1,0.0152853390520831,AX,0.0621785030440761,L1,-0...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.32106090515266,H1,-0.115368391146546,AX,-0.160838846634713,L1,-0...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0.00770499726846222,H2,2.60344777293182,H1,0.216758884629368,AX,-0.108213704178543,L1,-0....
set states for children of E. state=False
set states for children of P. state=False
handle state [('E', False), ('P', False)]
update switch state E False args=() kw={'refresh': True} ncanvase=2
update switch state P False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
State checksums do not match. Local:-979330482 Remote:-895732245
State checksum failed
check iteration duration=4.50611114502e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.59714308489811,H1,-0.0127544198910239,AX,0.0057599766647335,L1,-...
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0149250030518
GetData ===>> L2(CDD),0.00739050730210944,H2,2.2706390776733,H1,-0.0621667653645653,AX,-0.20394575162041,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00691877239756847,H2,2.52942862409085,H1,-0.040793363780139,AX,-0.313882545975016,L1,-0...
set states for children of T. state=False
handle state [('T', False)]
update switch state T False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.58171081543e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,2.48378237932704,H1,-0.132603709710389,AX,-0.322021267069804,L1,-0...
set states for children of L. state=True
handle state [('L', True)]
update switch state L True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=6.103515625e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.49242114734508,H1,0.0330979043519616,AX,-0.0750778787913083,L1,-...
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0.00613254767663533,H2,2.38630966954059,H1,-0.103533294053278,AX,-0.255419286747141,L1,-0...
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.60555267334e-05
09:28:06 -- collecting point 300
GetData ===>> L2(CDD),0.00597530275044398,H2,2.50141021658508,H1,-0.121688043712465,AX,0.00713599893526138,L1,-...
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00770499726846222,H2,2.24356176030977,H1,-0.325847995213501,AX,-0.00215211320938421,L1,...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.35444345078158,H1,-0.208550344874492,AX,-0.0730140180129011,L1,-...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00581805783025104,H2,2.39891637199891,H1,0.185609910753076,AX,-0.267800038093759,L1,-0....
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.48658413357793,H1,-0.28150403762651,AX,-0.190876308869068,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0166399478912
GetData ===>> L2(CDD),0.00644703754701332,H2,2.5985441231763,H1,-0.435090860247286,AX,-0.191908113434756,L1,-0....
check iteration duration=0.000128030776978
GetData ===>> L2(CDD),0.00754775228228662,H2,2.508881713546,H1,0.0971109345534844,AX,-0.0891808089849783,L1,-0....
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.4424574351134,H1,-0.18155033515939,AX,0.148303403555688,L1,-0.61...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00943469251228999,H2,2.44829418588918,H1,-0.127088441277281,AX,-0.249572765462464,L1,-0...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,2.63251991500932,H1,-0.157307129254269,AX,-0.259431584722717,L1,-0...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.006761527441385,H2,2.57752875943858,H1,-0.0899744606507435,AX,-0.190532373767984,L1,-0....
check iteration duration=6.60419464111e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,2.46206905564096,H1,-0.000458396435770312,AX,-0.231459787755695,L1...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,2.75865569230642,H1,0.14538209692341,AX,-0.0841358820885067,L1,-0....
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,3.01849405720753,H1,0.0593002110923146,AX,-0.117730010619529,L1,-0...
check iteration duration=6.00814819336e-05
GetData ===>> L2(CDD),0.00739050730210944,H2,2.61979344943122,H1,-0.0484924393531136,AX,-0.0270346385762171,L1,...
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00767421722412
GetData ===>> L2(CDD),0.00739050730210944,H2,2.59340699262115,H1,0.0203417757686098,AX,-0.0144214572702299,L1,-...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,2.75853903137678,H1,-0.222567073153943,AX,-0.157628680712805,L1,-0...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.006761527441385,H2,2.44093988560944,H1,0.0339023505478814,AX,-0.0944550224637034,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00644703754701332,H2,2.51004914009486,H1,-0.0746918182494384,AX,-0.13114440325385,L1,-0...
check iteration duration=5.50746917725e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,2.68352893047848,H1,-0.153860178462839,AX,-0.121284269611283,L1,-0...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,2.63100207098006,H1,0.0343620343894721,AX,-0.0591401723453991,L1,-...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.55511286846211,H1,0.0424065370775798,AX,-0.169437452596642,L1,-0...
check iteration duration=0.000125169754028
GetData ===>> L2(CDD),0.00912020241397181,H2,2.71747524745507,H1,-0.0818160876930215,AX,-0.0136187946835136,L1,...
check iteration duration=7.58171081543e-05
GetData ===>> L2(CDD),0.00691877239756847,H2,2.49545640825207,H1,0.149979476460007,AX,-0.0243973506988498,L1,-0...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.59504153123871,H1,0.0357410872288053,AX,-0.360421346432966,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0117540359497
09:28:33 -- collecting point 325
GetData ===>> L2(CDD),0.00943469251228999,H2,2.56211777928131,H1,0.0667702973385761,AX,-0.271583013677527,L1,-0...
check iteration duration=9.51290130615e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,2.62236208054034,H1,-0.00999644695692207,AX,-0.151093666997796,L1,...
check iteration duration=8.51154327393e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,2.69927707556343,H1,0.214689917912072,AX,0.0207816596072904,L1,-0....
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00770499726846222,H2,2.49370529504204,H1,-0.037345996589816,AX,0.263798555391722,L1,-0....
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,2.83985506949348,H1,0.0745852187107238,AX,-0.0639559100340379,L1,-...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00566081291605652,H2,2.67594658055688,H1,-0.0410231878209924,AX,-0.101219732221595,L1,-...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.7419733204747,H1,0.042521459030165,AX,-0.171157164569675,L1,-0.1...
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,2.74488979855257,H1,-0.0768750677031264,AX,-0.170927869817586,L1,-...
check iteration duration=9.70363616943e-05
GetData ===>> L2(CDD),0.00628979260882512,H2,2.75328930393557,H1,-0.218431010584885,AX,-0.271009836514518,L1,-0...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00770499726846222,H2,2.57939677351091,H1,0.0194224216672302,AX,0.17640174275875,L1,-0.6...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0153479576111
GetData ===>> L2(CDD),0.0103781629512068,H2,2.56456950990406,H1,0.097685577042262,AX,-0.3096412133318,L1,-0.485...
check iteration duration=4.50611114502e-05
GetData ===>> L2(CDD),0.00974918263460189,H2,2.47479347187982,H1,0.0240192009379423,AX,-0.153845257128735,L1,-0...
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00707601735975037,H2,2.77942155909218,H1,0.023214762984168,AX,-0.0279519544050774,L1,-0...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.68282901879584,H1,-0.130650389080482,AX,-0.0577642428653269,L1,-...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.53876827138472,H1,-0.155813452090535,AX,0.173190462476171,L1,-0....
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,2.82702138673831,H1,-0.0318301834591073,AX,-0.0765684421560604,L1,...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.69426097224125,H1,0.0194224216672302,AX,-0.106952499877107,L1,-0...
check iteration duration=0.000121116638184
GetData ===>> L2(CDD),0.00833397727314888,H2,2.93016228235333,H1,0.144232755462776,AX,0.0513990981133719,L1,-0....
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00974918263460189,H2,2.65563813789095,H1,-0.19235042974434,AX,-0.18812482461943,L1,-0.4...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.006761527441385,H2,2.74057341408185,H1,-0.189592970282935,AX,0.0237630902136275,L1,-0.5...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0110819339752
GetData ===>> L2(CDD),0.00628979260882512,H2,2.66393159241955,H1,0.065850898986866,AX,-0.196493898117937,L1,-0....
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00896295737381037,H2,2.84043842270446,H1,-0.0518248559935708,AX,-0.234898986959666,L1,-...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,2.72669111731627,H1,-0.121458238890216,AX,-0.105461983571946,L1,-0...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.61815886950571,H1,0.0750449219395242,AX,0.00621865053626916,L1,-...
check iteration duration=8.98838043213e-05
GetData ===>> L2(CDD),0.0103781629512068,H2,2.78280480381293,H1,-0.0395293305743439,AX,-0.182392540498286,L1,-0...
check iteration duration=9.29832458496e-05
09:28:59 -- collecting point 350
GetData ===>> L2(CDD),0.00770499726846222,H2,3.07322408031771,H1,-0.090893709616133,AX,0.00392528336499323,L1,-...
check iteration duration=0.000113964080811
GetData ===>> L2(CDD),0.00833397727314888,H2,2.69519419882087,H1,0.0845838133727078,AX,-0.0593694937339851,L1,-...
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
check iteration duration=5.60283660889e-05
refresh_canvas_needed fired
GetData ===>> L2(CDD),0.00959193757044672,H2,3.08291009581289,H1,-0.0574554648466202,AX,0.050137686278089,L1,-0...
check iteration duration=0.000108957290649
GetData ===>> L2(CDD),0.00927744746013169,H2,2.7763883151393,H1,0.155381425411232,AX,-0.107984394428757,L1,-0.5...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.89002471546441,H1,0.0440154456655617,AX,-0.320989602008356,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00702404975891
GetData ===>> L2(CDD),0.00896295737381037,H2,2.70464316802218,H1,0.0296502853978501,AX,-0.368330426190458,L1,-0...
check iteration duration=5.50746917725e-05
GetData ===>> L2(CDD),0.0124223496429998,H2,2.789454663701,H1,-0.133178215024813,AX,-0.23638930279757,L1,-0.512...
check iteration duration=5.48362731934e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.84767203138671,H1,0.0307994903469809,AX,-0.192939916893565,L1,-0...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.0103781629512068,H2,2.74057341408185,H1,0.0567718873122684,AX,-0.219307852125702,L1,-0....
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.82072127673589,H1,0.00609188565500447,AX,-0.0203840726716237,L1,...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,2.88804121555937,H1,0.303084728504833,AX,-0.108328359033239,L1,-0....
check iteration duration=8.82148742676e-05
GetData ===>> L2(CDD),0.00660428249119995,H2,2.90075901992621,H1,-0.112725615068398,AX,0.037179642240027,L1,-0....
check iteration duration=8.39233398438e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.98978827393818,H1,-0.0195344031666487,AX,-0.111997307165175,L1,-...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,2.84615530255982,H1,-0.0120649273966179,AX,-0.121054962975892,L1,-...
check iteration duration=9.60826873779e-05
GetData ===>> L2(CDD),0.0106926531454999,H2,3.00787515317326,H1,-0.175460866812151,AX,-0.0905566935489034,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0142040252686
GetData ===>> L2(CDD),0.00864846731148277,H2,3.06423834434521,H1,-0.0510204806172897,AX,-0.136991644089818,L1,-...
check iteration duration=8.41617584229e-05
GetData ===>> L2(CDD),0.00896295737381037,H2,3.02479543929478,H1,0.180437669285498,AX,-0.110621453255127,L1,-0....
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.0119506141626095,H2,3.04078246089848,H1,-0.247038413768329,AX,0.0344275137560724,L1,-0....
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,2.95338214897297,H1,-0.246578863796907,AX,0.0705498263296919,L1,-0...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.010220917863058,H2,2.94988163133547,H1,-0.183848237752425,AX,-0.330847689603836,L1,-0.6...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00597530275044398,H2,2.88874127389066,H1,0.118143072648145,AX,-0.0269199740361638,L1,-0...
check iteration duration=8.9168548584e-05
GetData ===>> L2(CDD),0.00833397727314888,H2,2.81908792149772,H1,-0.0957197523116077,AX,-0.226530247461405,L1,-...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,3.02187812773391,H1,0.00379353599626194,AX,-0.273073272702946,L1,-...
check iteration duration=9.10758972168e-05
GetData ===>> L2(CDD),0.00959193757044672,H2,3.18374370353873,H1,0.144807426022025,AX,-0.359848222185602,L1,-0....
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,2.86167271606995,H1,-0.0988221955797355,AX,-0.11589554922978,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0174899101257
09:29:25 -- collecting point 375
GetData ===>> L2(CDD),0.00770499726846222,H2,2.84417189148328,H1,-0.0204537192640066,AX,0.0164242007189937,L1,-...
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=9.51290130615e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,3.14674683424598,H1,0.181816930965705,AX,0.250493541650593,L1,-0.6...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0.00864846731148277,H2,3.04685059579945,H1,0.0486123421321222,AX,-0.26046331578403,L1,-0....
check iteration duration=7.70092010498e-05
GetData ===>> L2(CDD),0.00943469251228999,H2,2.99048840498567,H1,-0.0988221955797355,AX,-0.244184763414877,L1,-...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,3.04439999833383,H1,-0.0714743889952742,AX,-0.294968350794477,L1,-...
check iteration duration=5.60283660889e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.91674401740004,H1,-0.153055888172487,AX,-0.116812780361721,L1,-0...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.00770499726846222,H2,2.98827132505164,H1,-0.0954899413023939,AX,-0.130915098967933,L1,-...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,2.96014985187498,H1,0.213310609232225,AX,-0.0374690545322175,L1,-0...
check iteration duration=0.000113010406494
GetData ===>> L2(CDD),0.0103781629512068,H2,3.11663684883946,H1,-0.0675674961863361,AX,-0.104774052191113,L1,-0...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0.00644703754701332,H2,2.90775971664294,H1,0.156185973587851,AX,-0.188010179272059,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0142879486084
GetData ===>> L2(CDD),0.00849122228931661,H2,3.12282215791375,H1,0.177564213786149,AX,-0.0133894623926224,L1,-0...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0.0108498982516441,H2,2.95571583434728,H1,-0.0944557910827627,AX,0.0361475931362155,L1,-0...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0.00754775228228662,H2,2.8157045514548,H1,0.155611296250557,AX,0.135344037804346,L1,-0.55...
check iteration duration=9.01222229004e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,3.01370970158215,H1,-0.0640053154221171,AX,-0.149947168787894,L1,-...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0.00849122228931661,H2,3.0865277888147,H1,0.164921111266906,AX,-0.255419286747141,L1,-0.3...
check iteration duration=9.20295715332e-05
GetData ===>> L2(CDD),0.00880571233964735,H2,3.1407947870018,H1,0.0804464512879339,AX,-0.147998118695914,L1,-0....
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0.0113216336060672,H2,2.8748568770894,H1,-0.023326576420896,AX,-0.00845880492696755,L1,-0...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.0113216336060672,H2,3.1259731794375,H1,-0.110657350477928,AX,-0.317550710482524,L1,-0.5...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0.010220917863058,H2,3.10169890494672,H1,-0.023326576420896,AX,-0.0644145504617355,L1,-0....
check iteration duration=9.3936920166e-05
GetData ===>> L2(CDD),0.00801948725880869,H2,3.21152145110657,H1,0.0368902994341608,AX,-0.0399916436060596,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00581693649292
GetData ===>> L2(CDD),0.00927744746013169,H2,3.02759606656629,H1,-0.0337837042168487,AX,-0.102366288484654,L1,-...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,3.16250242797119,H1,-0.12536491342476,AX,-0.0661344501191581,L1,-0...
check iteration duration=9.51290130615e-05
GetData ===>> L2(CDD),0.00786224226063624,H2,2.98150342786848,H1,-0.311717888089308,AX,-0.0293279265080315,L1,-...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0.00912020241397181,H2,3.03798179592923,H1,0.0582658960175572,AX,-0.0626946477300983,L1,-...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0.00817673226297957,H2,2.98570418613319,H1,0.0895256857851881,AX,0.113324984606435,L1,-0....
check iteration duration=8.79764556885e-05
09:29:52 -- collecting point 400
GetData ===>> L2(CDD),0.00896295737381037,H2,2.98488737061534,H1,0.00138027474824565,AX,-0.153501308792756,L1,-...
check iteration duration=6.69956207275e-05
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.415
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
baselines () {'settling_time': 15.0, 'detector': 'H2', 'mass': 39.862, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
detector Detector(H2)
POSITION 39.862 H2
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.56995459e-01]
H2 map mass to dac 39.862 >> 3.48552881693
GetHighVoltage ===>> 9000
positioning 39.862 (3.48552881693) on H2
setting magnet DAC
current  : 3.492450
requested: 3.485529
Delta Dac: 0.006921
Checking detector protection. dv=0.00692
SetMagnetDAC 3.48552881693 ===>> OK
Magnet settling time: 0.500
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
check iteration duration=4.2200088501e-05
GetData ===>> L2(CDD),0,H2,0.0252259925625085,H1,-0.13088019171258,AX,-0.266195134868243,L1,-0.400362952945682,...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0,H2,-0.0257085474999962,H1,-0.0551572611215465,AX,-0.0732433360955951,L1,-0.526424155261...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0,H2,-0.0813022605331584,H1,-0.16328181477905,AX,-0.186634434032846,L1,-0.583278959928227...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0,H2,0.179327867917855,H1,-0.0112605188638676,AX,-0.00272545052777199,L1,-0.5303452834795...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0,H2,0.0492372448171965,H1,-0.157766721762764,AX,-0.127934138275723,L1,-0.243715093490371...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,-0.015218813330124,H1,-0.382251482235959,AX,-0.119793775503344,L1,-0.414665323862702...
set states for children of S. state=False
handle state [('S', False)]
update switch state S False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0,H2,0.0179994203843962,H1,-0.121458238890216,AX,-0.295312248570484,L1,-0.457340497350404...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,-0.0424918881818162,H1,-0.0514801237717481,AX,-0.124494556772527,L1,-0.5494893872943...
check iteration duration=9.01222229004e-05
GetData ===>> L2(CDD),0,H2,-0.0117222102743201,H1,-0.299655437725401,AX,-0.160380252158444,L1,-0.57808951178271...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0,H2,-0.13059970225242,H1,0.192621215683203,AX,-0.0489353152257945,L1,-0.525040223862596,...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0,H2,-0.0955206901866477,H1,0.180322730901538,AX,-0.036437084368867,L1,-0.439578626663992...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0,H2,-0.153790783512074,H1,-0.211767316916231,AX,0.00530130301226545,L1,-0.58212575163342...
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0,H2,-0.077223164690993,H1,0.065850898986866,AX,0.255884344021248,L1,-0.75924244621176,L2...
check iteration duration=6.69956207275e-05
GetData ===>> L2(CDD),0,H2,0.161491839748242,H1,0.00620680328170568,AX,0.049449644155858,L1,-0.66319294836475,L...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0155282020569
GetData ===>> L2(CDD),0,H2,0.143889281130305,H1,-0.100315961001614,AX,-0.202570029163383,L1,-0.432427651647861,...
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,-0.202968040936746,H1,0.0660807484924191,AX,-0.218276076938168,L1,-0.739641281937748...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0,H2,0.10577091868091,H1,-0.243591783642687,AX,-0.0310478888707538,L1,-0.511662118339707,...
check iteration duration=8.41617584229e-05
GetData ===>> L2(CDD),0,H2,-0.0929567263444148,H1,-0.225324438346342,AX,-0.104544741621266,L1,-0.35583970370747...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0,H2,-0.296071762864252,H1,0.0625180873061393,AX,-0.0915886056806836,L1,-0.57070891538924...
check iteration duration=9.41753387451e-05
GetData ===>> L2(CDD),0,H2,-0.215320233633216,H1,-0.187065292184771,AX,-0.193742429930344,L1,-0.463222603473853...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,0.0716171950991982,H1,-0.0869868954623568,AX,-0.0307038966442918,L1,-0.6054202927760...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,0.0368818666438473,H1,-0.177299200930284,AX,-0.0895247803102436,L1,-0.62686922602907...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0,H2,-0.049834509173292,H1,-0.0807819228129028,AX,-0.0804668277343795,L1,-0.4820220363295...
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=0.000132083892822
GetData ===>> L2(CDD),0,H2,-0.0274568255912893,H1,0.0709076007666176,AX,-0.299668276430928,L1,-0.19872317338613...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0151360034943
09:30:34 -- collecting point 25
GetData ===>> L2(CDD),0,H2,-0.0548461077238117,H1,-0.0711296637953004,AX,-0.26699758681548,L1,-0.53219051479250...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0,H2,-0.101114769785512,H1,-0.0798626642104672,AX,0.0296113078457919,L1,-0.49401657572110...
set states for children of U. state=True
handle state [('U', True)]
update switch state U True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0,H2,-0.00263098383003779,H1,-0.231068923845785,AX,-0.306431543769873,L1,-0.6199502672305...
set states for children of S. state=True
set states for children of T. state=True
handle state [('S', True), ('T', True)]
update switch state S True args=() kw={'refresh': True} ncanvase=2
update switch state T True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0,H2,-0.0039130849848834,H1,0.103317091545422,AX,0.0225017145988927,L1,-0.458724525536296...
check iteration duration=9.29832458496e-05
GetData ===>> L2(CDD),0,H2,0.0563474860232595,H1,0.204000327226293,AX,0.00564530823125921,L1,-0.40382322335054,...
set states for children of I. state=True
handle state [('I', True)]
update switch state I True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0,H2,-0.127802750770828,H1,0.00597696804180016,AX,0.0226163850411644,L1,-0.47521737579588...
set states for children of L. state=False
handle state [('L', False)]
update switch state L False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0,H2,-0.0582260085263458,H1,-0.0191896594042794,AX,-0.00983480490024978,L1,-0.56136776739...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,-0.193179400076636,H1,0.0242490404763093,AX,-0.250833782861956,L1,-0.399670897380618...
set states for children of Q. state=True
set states for children of P. state=True
handle state [('Q', True), ('P', True)]
update switch state Q True args=() kw={'refresh': True} ncanvase=2
update switch state P True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0,H2,-0.0210464573130998,H1,-0.148919527513348,AX,-0.0925058599803706,L1,-0.5199657918073...
check iteration duration=9.79900360107e-05
GetData ===>> L2(CDD),0,H2,-0.106825359707325,H1,0.026547438874301,AX,-0.123691985986294,L1,-0.472910700352963,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00490999221802
GetData ===>> L2(CDD),0,H2,-0.0961034083043233,H1,-0.0730831049635903,AX,-0.271812284446725,L1,-0.4466142118220...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0,H2,0.0311704709889295,H1,-0.217856556047752,AX,-0.153845257128735,L1,-0.407398823109031...
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0,H2,-0.0137036202073877,H1,-0.00103298046212894,AX,-0.0935377700219243,L1,-0.61418443045...
check iteration duration=5.50746917725e-05
GetData ===>> L2(CDD),0,H2,0.245312341520316,H1,0.0143659897693337,AX,-0.107525774764618,L1,-0.550757959111977,...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0,H2,0.0815251491125719,H1,0.0946974398392774,AX,-0.152125514218639,L1,-0.421239729928283...
check iteration duration=8.41617584229e-05
GetData ===>> L2(CDD),0,H2,-0.202618448307316,H1,-0.370189914022663,AX,-0.266539042927395,L1,-0.440385991492359...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0,H2,0.0533168850908624,H1,-0.127203343024698,AX,-0.120252389321047,L1,-0.569209724870787...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,-0.107291528840937,H1,-0.0298766587454699,AX,-0.325918658430808,L1,-0.87280608563357...
check iteration duration=8.08238983154e-05
GetData ===>> L2(CDD),0,H2,-0.0166174510527564,H1,0.04941680126606,AX,0.0155068434666739,L1,-0.575552438119686,...
check iteration duration=8.98838043213e-05
GetData ===>> L2(CDD),0,H2,0.286350866734615,H1,0.269978831297,AX,-0.265278046109153,L1,-0.440039978076863,L2,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0118179321289
GetData ===>> L2(CDD),0,H2,0.0413111352131664,H1,-0.172933151678105,AX,-0.0742752667923484,L1,-0.57082423764078...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0,H2,-0.131998174993533,H1,-0.0643500431678752,AX,-0.0153387851208848,L1,-0.4286214659861...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0,H2,0.0501697325225586,H1,0.0196522601102008,AX,-0.249916679462305,L1,-0.448574939558948...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0,H2,-0.106242647977373,H1,0.0447049787391242,AX,0.108049661245209,L1,-0.480638041452068,...
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0,H2,-0.0414429378263041,H1,-0.197635538343497,AX,-0.115322279328251,L1,-0.69513363503832...
check iteration duration=8.70227813721e-05
09:31:00 -- collecting point 50
GetData ===>> L2(CDD),0,H2,-0.2175342894216,H1,-0.177184305150453,AX,-0.315143479101619,L1,-0.623063804810204,L...
check iteration duration=7.79628753662e-05
GetData ===>> L2(CDD),0,H2,-0.0316526802605596,H1,-0.101579914551758,AX,-0.244184763414877,L1,-0.56747988677177...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0,H2,-0.151693120389857,H1,-0.213375798913827,AX,-0.320072565469665,L1,-0.610494276892433...
check iteration duration=0.000141143798828
GetData ===>> L2(CDD),0,H2,-0.197258012341108,H1,-0.20039297481186,AX,-0.166800554936355,L1,-0.587315178140924,...
check iteration duration=7.5101852417e-05
GetData ===>> L2(CDD),0,H2,-0.167542019229143,H1,0.374933031443709,AX,0.078921222429567,L1,-0.866004171718291,L...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00866794586182
GetData ===>> L2(CDD),0,H2,0.0169504062803758,H1,-0.151906900879675,AX,-0.157857978634004,L1,-0.498975813004979...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0,H2,-0.0482028203834096,H1,0.0734359615971143,AX,-0.0805814858947537,L1,-0.4490362866846...
check iteration duration=7.31945037842e-05
GetData ===>> L2(CDD),0,H2,-0.108573492813394,H1,-0.160754067728113,AX,0.154381750260272,L1,-0.638861970793929,...
check iteration duration=7.48634338379e-05
GetData ===>> L2(CDD),0,H2,0.150067626554308,H1,-0.157651823656314,AX,-0.0397623175999537,L1,-0.464145283544069...
check iteration duration=5.07831573486e-05
GetData ===>> L2(CDD),0,H2,-0.0998327960366387,H1,-0.0528590519203477,AX,-0.0709501528084712,L1,-0.300817212066...
check iteration duration=5.91278076172e-05
GetData ===>> L2(CDD),0,H2,-0.104028340237983,H1,-0.0523994094233841,AX,-0.181475371869889,L1,-0.54303117772205...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0,H2,-0.0943552529101605,H1,-0.160639169977083,AX,-0.229740183544098,L1,-0.48375202714463...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,0.19961237361847,H1,-0.147425837359965,AX,-0.220339626206782,L1,-0.540609338024083,L...
check iteration duration=6.00814819336e-05
GetData ===>> L2(CDD),0,H2,-0.295023084437524,H1,0.192276396216151,AX,-0.074963219975227,L1,-0.591812658610859,...
check iteration duration=9.67979431152e-05
GetData ===>> L2(CDD),0,H2,-0.0567108820246003,H1,-0.0674525873348036,AX,-0.00192277818623774,L1,-0.42423856699...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0136480331421
GetData ===>> L2(CDD),0,H2,0.076396313329595,H1,-0.0620518558696774,AX,0.0950908374827652,L1,-0.606227519300865...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0,H2,0.119176289654345,H1,-0.266339314865391,AX,-0.371883759699581,L1,-0.424699925713637,...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0,H2,-0.077805893710295,H1,0.00195486021213802,AX,-0.00708280298592304,L1,-0.410051678911...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0,H2,0.0122881349839769,H1,0.0558524984892003,AX,-0.175284460766033,L1,-0.54049401217357,...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0,H2,-0.145866254778433,H1,-0.15156220442502,AX,-0.215295386849719,L1,-0.424815265360364,...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0,H2,0.114396962408152,H1,-0.0494117278521805,AX,0.233403750728251,L1,-0.42377720804675,L...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0,H2,-0.153324636540227,H1,0.00827532290308655,AX,-0.29324886006957,L1,-0.65096987968028,...
check iteration duration=6.41345977783e-05
GetData ===>> L2(CDD),0,H2,-0.0174333221339288,H1,-0.0304512252484851,AX,-0.198098917594245,L1,-0.4407320047839...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0,H2,-0.0810691698006861,H1,0.201931387871198,AX,0.0714672360484073,L1,-0.726957964123571...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,-0.00740971595700106,H1,-0.246693751310169,AX,-0.0634972693874863,L1,-0.446498874772...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.00615406036377
09:31:27 -- collecting point 75
GetData ===>> L2(CDD),0,H2,0.0777950840578838,H1,-0.102039533614136,AX,-0.297031735607787,L1,-0.542108572837426...
check iteration duration=7.9870223999e-05
GetData ===>> L2(CDD),0,H2,-0.131881635674801,H1,0.0506809526891878,AX,-0.243726208656118,L1,-0.406360747120077...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0,H2,0.0622921535872385,H1,-0.027233648423449,AX,-0.0554710226936127,L1,-0.36552887526547...
check iteration duration=8.9168548584e-05
GetData ===>> L2(CDD),0,H2,-0.00647728225356986,H1,-0.232907151979332,AX,-0.323969964723091,L1,-0.6513158177092...
check iteration duration=0.000120878219604
GetData ===>> L2(CDD),0,H2,-0.0908589327468428,H1,-0.1313397968131,AX,0.114013072393704,L1,-0.717272409513721,L...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0,H2,0.100292254731686,H1,0.123200048549727,AX,0.087407369505919,L1,-0.473833371189871,L2...
check iteration duration=7.08103179932e-05
GetData ===>> L2(CDD),0,H2,-0.0475035243544964,H1,-0.188788709788309,AX,0.0429132685251173,L1,-0.42250846981919...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0,H2,-0.0290885489903612,H1,0.0701031237104262,AX,0.00507196626756738,L1,-0.3905587862999...
check iteration duration=7.08103179932e-05
GetData ===>> L2(CDD),0,H2,-0.148430079923843,H1,0.0665404476684885,AX,-0.311360674764255,L1,-0.528846030448205...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,0.0355997136958861,H1,-0.137199742647435,AX,0.0402757961914571,L1,-0.411320433465096...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0127830505371
GetData ===>> L2(CDD),0,H2,0.0746478527317631,H1,0.0474631159619084,AX,-0.00754147051817358,L1,-0.4557257952998...
check iteration duration=7.00950622559e-05
GetData ===>> L2(CDD),0,H2,-0.0111394418829712,H1,0.0594151350580897,AX,-0.0258879925614393,L1,-0.4704886852226...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0,H2,-0.404196125263265,H1,-0.231758259806264,AX,0.136834929406901,L1,-0.587315178140924,...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0,H2,-0.197491075385531,H1,-0.09399616840684,AX,-0.0404502954545582,L1,-0.49159461339561,...
check iteration duration=8.29696655273e-05
GetData ===>> L2(CDD),0,H2,-0.00822559471860034,H1,-0.0104561096603397,AX,-0.169781395237502,L1,-0.640245739474...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0,H2,-0.19690841767058,H1,0.187908693639925,AX,-0.206811833756239,L1,-0.550066011054134,L...
check iteration duration=8.70227813721e-05
GetData ===>> L2(CDD),0,H2,-0.118945684978621,H1,-0.307007806376093,AX,-0.368445050056798,L1,-0.328040470894894...
check iteration duration=8.01086425781e-05
GetData ===>> L2(CDD),0,H2,0.261867448502482,H1,-0.12927157213615,AX,0.228013074261472,L1,-0.545453011360916,L2...
check iteration duration=0.000100135803223
GetData ===>> L2(CDD),0,H2,-0.137358968645243,H1,-0.101809724110155,AX,-0.235357545924952,L1,-0.447767581559976...
check iteration duration=7.91549682617e-05
GetData ===>> L2(CDD),0,H2,-0.318443301422355,H1,0.0404528659711627,AX,-0.0530631356325845,L1,-0.43415773109212...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0130858421326
GetData ===>> L2(CDD),0,H2,-0.148779691923363,H1,1.27103143259683E-06,AX,-0.251177696411052,L1,-0.4609158994495...
check iteration duration=8.51154327393e-05
GetData ===>> L2(CDD),0,H2,-0.234547392980324,H1,-0.146161943885234,AX,0.0716965886144958,L1,-0.591005420065218...
check iteration duration=7.20024108887e-05
GetData ===>> L2(CDD),0,H2,0.193083981053916,H1,-0.00413572829009616,AX,-0.209333978974753,L1,-0.75105612587415...
check iteration duration=8.89301300049e-05
GetData ===>> L2(CDD),0,H2,-0.0661512473656436,H1,-0.18235460168973,AX,-0.0378130443408131,L1,-0.63286561698452...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0,H2,-0.253191550154164,H1,-0.0349328322266461,AX,-0.117271395599838,L1,-0.48951864086544...
check iteration duration=7.39097595215e-05
09:31:53 -- collecting point 100
GetData ===>> L2(CDD),0,H2,-0.184206393224229,H1,-0.204988684740859,AX,-0.375895572084546,L1,-0.656504873300809...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0,H2,-0.0630044690423079,H1,-0.325503360917505,AX,-0.174137991376038,L1,-0.55329509775947...
check iteration duration=5.60283660889e-05
GetData ===>> L2(CDD),0,H2,0.152515661007053,H1,-0.0274634756952185,AX,0.102200966970227,L1,-0.376832786189332,...
check iteration duration=8.79764556885e-05
GetData ===>> L2(CDD),0,H2,-0.127919290575496,H1,-0.0925023931977351,AX,0.144518791979404,L1,-0.662616391989505...
check iteration duration=7.60555267334e-05
GetData ===>> L2(CDD),0,H2,0.0528506396269295,H1,-0.0723936555913401,AX,0.026056504657364,L1,-0.600922875528818...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.0179698467255
GetData ===>> L2(CDD),0,H2,-0.0773397105226903,H1,0.0529794140663681,AX,-0.0423995633722938,L1,-0.7583200473814...
check iteration duration=7.41481781006e-05
GetData ===>> L2(CDD),0,H2,0.133048127811298,H1,0.0488421875309564,AX,0.0104613942106251,L1,-0.56136776739818,L...
check iteration duration=8.10623168945e-05
GetData ===>> L2(CDD),0,H2,-0.136310120025013,H1,-0.0134439118924693,AX,0.156446103156654,L1,-0.62294848878213,...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0,H2,0.187255095937393,H1,-0.0814713661895018,AX,-0.05822288624392,L1,-0.503012382736209,...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,-0.077805893710295,H1,-0.00999644695692207,AX,-0.611416952062329,L1,-0.2374855677181...
check iteration duration=7.10487365723e-05
GetData ===>> L2(CDD),0,H2,0.159976375220554,H1,0.0625180873061393,AX,-0.0685423044758354,L1,-0.354801572432202...
check iteration duration=8.20159912109e-05
GetData ===>> L2(CDD),0,H2,0.0226617189042543,H1,0.0145958270080753,AX,-0.211856117582552,L1,-0.502551061333037...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0,H2,-0.166260132545592,H1,0.0838942517924871,AX,-0.0399916436060596,L1,-0.45883986112933...
check iteration duration=9.17911529541e-05
GetData ===>> L2(CDD),0,H2,-0.254356798176348,H1,-0.0029865635916957,AX,-0.256909570805694,L1,-0.38825190913049...
check iteration duration=8.60691070557e-05
GetData ===>> L2(CDD),0,H2,-0.108573492813394,H1,-0.0119500119330729,AX,-0.207958264220361,L1,-0.67403214429951...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
check iteration duration=0.01478099823
GetData ===>> L2(CDD),0,H2,-0.00402963955229763,H1,-0.0402188034370951,AX,-0.107869739533026,L1,-0.655351752239...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0,H2,-0.174067961750768,H1,0.0807912307838353,AX,-0.125641085306101,L1,-0.536688251381629...
check iteration duration=7.89165496826e-05
GetData ===>> L2(CDD),0,H2,-0.0532144272941421,H1,-0.0271187347667832,AX,-0.0645292105343036,L1,-0.651431130357...
check iteration duration=7.29560852051e-05
GetData ===>> L2(CDD),0,H2,0.156362584667538,H1,-0.0807819228129028,AX,-0.253699725351205,L1,-0.589044980794725...
check iteration duration=7.39097595215e-05
GetData ===>> L2(CDD),0,H2,0.0516850269395114,H1,-0.0229818340140077,AX,-0.114519700892387,L1,-0.59100542006521...
check iteration duration=8.48770141602e-05
GetData ===>> L2(CDD),0,H2,-0.109156203154806,H1,0.0482675741375617,AX,-0.082874646231917,L1,-0.388482597094618...
check iteration duration=3.00407409668e-05
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.197
flush and close file /Users/obama/PychronDev/data/isotopes/75/cc5ee6-e6bb-4fd9-8eee-195df228a912.h5
activate_detectors ('H1', 'L2(CDD)') {'peak_center': True}
peak_center () {'detector': 'H2', 'integration_time': 1.048576, 'isotope': 'Ar40'}
peak center: mean=3.04942256877 threshold=100.0
Skipping peak center. intensities to small. 3.04942256877<100.0
finished measure script
executed snippet estimated_duration=655.442112, duration=600.385289907
felix_analysis400_120.py completed successfully
Measurement Finished
09:32:15 -- ******* Measurement Finished *******
Post Measurement Started felix_pump_ms.py
09:32:15 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.19480895996e-05
Pumping spectrometer
open () {'name': 'V'}
open name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=2
09:32:15 -- OPEN   VALVE-V (Felix Ion Pump)
-------------------------- open V () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.374837875366
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
09:32:15 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 2}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
4782096016 connecting to database sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/obama/PychronDev/.appdata/local_lab.db
create new session 4782096016
close session 4782096016
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4711519248
MassSpec Database Version: 16.0
close session 4711519248
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to ba-01-F
setting aliquot to 694
setting step to 
setting uuid to 75cc5ee6-e6bb-4fd9-8eee-195df228a912
setting irradpos to ba-01-F
setting extract_device to Fusions Diode
setting tray to 
setting position to 
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 0.0
setting duration_at_request to 0.0
setting first_stage_delay to 0.0
setting cleanup to 0.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_air
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Felix
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
adding new session for Felix
Reference Isotope=Ar40
Reference Detector=H2
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar40 H2
add baseline dbdet= Ar40. original det= H2
get baseline data Ar40 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x118959890> len t=120
baseline Ar40. v=-0.044070363669, e=0.0106444960136
get signal data Ar40 H2
Get data signal Ar40 0.413+/-0.020 len t=400
adding isotope Ar39 H1
add baseline dbdet= Ar39. original det= H1
get baseline data Ar39 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x11d8b86d0> len t=120
baseline Ar39. v=-0.053349747092, e=0.0108195590135
get signal data Ar39 H1
Get data signal Ar39 0.011+/-0.024 len t=400
adding isotope Ar38 AX
add baseline dbdet= Ar38. original det= AX
get baseline data Ar38 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x11d8b8890> len t=120
baseline Ar38. v=-0.112219750206, e=0.0121652930471
get signal data Ar38 AX
Get data signal Ar38 -0.002+/-0.012 len t=400
adding isotope Ar37 L1
add baseline dbdet= Ar37. original det= L1
get baseline data Ar37 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x11d8b8a50> len t=120
baseline Ar37. v=-0.520664824017, e=0.00932675771552
get signal data Ar37 L1
Get data signal Ar37 0.011+/-0.012 len t=400
adding isotope Ar36 L2(CDD)
add baseline dbdet= Ar36. original det= L2(CDD)
get baseline data Ar36 L2(CDD)
Get data baseline <pychron.processing.isotope.Baseline object at 0x11d8b8c10> len t=120
baseline Ar36. v=0.0, e=0.0
get signal data Ar36 L2(CDD)
Get data signal Ar36 0.00147+/-0.00014 len t=400
ba-01-F-694 added analysis time 0.605092048645s
analysis added to mass spec database
mass spec save time= 0.652
persistence save - dvc
================= post measurement started
create new session 4672135632
close session 4672135632
add to repo msg=modified - felix_analysis400_120.py
add to repo msg=modified - felix_air_x2.py
add to repo msg=modified - felix_pump_ms.py
add to repo msg=modified - felix_pump_extraction_line.py
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 1e2ad98a77a0f8b97e0df49be2474708cb221738.json
add to repo msg=modified - -F-694.json
add to repo msg=modified - -F-694.dat.json
add to repo msg=modified - -F-694.blan.json
add to repo msg=modified - -F-694.inte.json
add to repo msg=modified - -F-694.icfa.json
add to repo msg=modified - -F-694.base.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/laboratory/ba-01/tags/-F-694.tags.json
add to repo msg=modified - -F-694.peak.json
add to repo msg=modified - -F-694.extr.json
not at valid file /Users/obama/PychronDev/data/.dvc/repositories/laboratory/ba-01/monitor/-F-694.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -F-694.inte.json
add to repo msg=modified - -F-694.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -F-694.blan.json
commit message=<BLANKS> preceding 
add to repo msg=modified - -F-694.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1184332f0>
pushing to remote=origin, url=https://github.com
Smart pull ahead: 0 behind: 0
Up-to-date with origin
no changes to meta repo
create new session 4672135632
add association laboratory
get identifier "ba-01-F"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x12358f450>
close session 4672135632
================= post measurement finished
09:32:33 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
09:32:33 -- ******* Post Run Check Passed *******
09:32:33 -- Automated run ba-01-F-694 success duration: 718.074 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=ba-01-F-694, duration=718.07351923, md5=99f61ed5
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/Load1797.rem.txt
/Users/obama/PychronDev/experiments/rem/Load1797.ex.txt
doing event level: 3
