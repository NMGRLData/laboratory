do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000262975692749
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.81469726562e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.41210174561e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.98838043213e-05
executed snippet estimated_duration=0.0, duration=0.00224804878235
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000165939331055
executed snippet estimated_duration=4.0, duration=0.00145816802979
Script duration 556.0
Run total estimated duration= 557.000
run duration: 0:09:17
doing event level: 2
16:44:40 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4991535824
close session 4991535824
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65714-01B
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65714-01B
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
16:44:41 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.17013,0.14873,-0.02320,0.01017,0.01107,0.00181
16:44:41 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
16:44:41 -- ******* Pre Extraction Check Passed *******
=================================================================================
16:44:41 -- stopping status monitor
stop 4971571056
Status monitor stopped
Status monitor finished
16:44:42 -- starting status monitor
start 4971571056
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 16:44:44.112102
Extraction Started jan_co2.py
16:44:44 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12b9d97d0>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.70227813721e-05
executed snippet estimated_duration=100.0, duration=0.00233793258667
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.72068786621e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0179100036621
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.89437103271e-05
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
16:44:44 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
16:44:44 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=2
16:44:45 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
16:44:46 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
16:44:46 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
16:44:47 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
16:44:47 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
16:44:48 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=2
16:44:48 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.89865112305
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.25') {}
setting motor "beam" to 1.25
set motor beam to 1.25
SetMotor beam,1.25 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('80',) {'autocenter': True}
FusionsCO2 move to position 80
sending GoToHole 80,True
GoToHole 80,True ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> OK
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> -14.47800,-2.41300,1.00000
got position (-14.478, -2.413, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
Join finished
block finished. duration 5.02825903893
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=2
16:44:58 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
set extract to 5.0
WaitControl setup for 30.0  
extract (5.0,) {}
GetPosition ===>> -14.47800,-2.41300,1.00000
set extraction state FusionsCO2 ON! 5.0(watts) (0.75, 'red', 1.5)
extract sample to 5.0 (watts)
set laser output
SetLaserOutput 5.0,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
Join finished
block finished. duration 30.0319449902
Interval 1 finished
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0479581356
executed snippet estimated_duration=165.0, duration=74.8830530643
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 80
Extraction Finished
16:45:59 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
16:45:59 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 197.811389855338
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8272 5.8804 5.9943 6.1671 6.2327 6.3953
Ar39     5.7264 5.7727 5.8868 6.0531 6.1178 6.2818
Ar36     5.4039 5.4417 5.5501 5.7120 5.7728 5.9329
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.147042666178
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=65714 analysis type=unknown
Measurement Started jan_unknown400_120.py
16:45:59 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
testing...
no interpolation path defined
executed snippet estimated_duration=568.532928, duration=0.000182151794434
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=PM41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar40 blank 0.480+/-0.008
 - setting Ar36 blank 0.00458+/-0.00017
 - setting Ar37 blank 0.057+/-0.005
 - setting Ar38 blank 0.0367+/-0.0024
 - setting PM41 blank 0.00+/-0.07
 - setting Ar39 blank 0.029+/-0.008
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to PM41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57203999]
H1 map mass to dac 39.9624 >> 5.88043
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.88043) on H1
setting magnet DAC
current  : 5.880431
requested: 5.880430
Delta Dac: 0.000001
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88043 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x135b4e170>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x13e0e14d0>"
setting label 0 H2 PM41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1407dbb30>"
setting label 0 H2 PM41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
16:46:00 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=2
16:46:00 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=2
refresh_canvas_needed fired
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=2
16:46:04 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/PM41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
16:46:16 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
16:46:16 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
16:46:16 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000190019607544
executed snippet estimated_duration=4.0, duration=0.0252170562744
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000191926956177
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=2
16:46:17 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.672
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar40" to "('Parabolic', 'SEM')"
No fit for "PM41". defaulting to linear. check the measurement script "jan_unknown400_120.py"
set "PM41" to "linear"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H1" to "('average', 'SEM')"
set "H2" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/PM41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=2
16:46:17 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
starting measurement
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=2
16:46:19 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=2
16:46:19 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=2
16:46:20 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=2
16:46:21 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=2
16:46:21 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.15758013725
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.17410993576
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
16:46:23 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:46:43 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:47:09 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:47:35 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:48:02 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:48:28 -- collecting point 125
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:48:54 -- collecting point 150
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:49:20 -- collecting point 175
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:49:47 -- collecting point 200
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:50:13 -- collecting point 225
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:50:39 -- collecting point 250
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:51:05 -- collecting point 275
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:51:32 -- collecting point 300
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:51:58 -- collecting point 325
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:52:24 -- collecting point 350
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:52:50 -- collecting point 375
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10097859362793699}"
16:53:17 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.139
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57203999]
H1 map mass to dac 34.2 >> 5.24108599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.24108599104) on H1
setting magnet DAC
current  : 5.880430
requested: 5.241086
Delta Dac: 0.639344
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.24108599104 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13435110300094025}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10739032120840035}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11496414330569414}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11370801463561907}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10667509062692315}"
16:53:59 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10624693590266865}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10802257872294906}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1032233092885533}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10120969320375611}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0988801113019446}"
16:54:25 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0973773392791128}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09708900324215072}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09834421179055754}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09681031289320784}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.0956761868591304}"
16:54:52 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09460097662186694}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09397448772381731}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09392830274028276}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09604430441390158}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09748045933134639}"
16:55:18 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09790583109528692}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09930969257168458}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.09997790579581307}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.10039476989786439}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.038
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=34.2252155893 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x12d4df410>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x136a79d10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x12d4df410>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x136a79d10>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x12d4df410>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x136a79d10>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57203999]
H1 map mass to dac 39.9624 >> 5.88043
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x135a3ccb0>
doing pc
starting peak center. center dac= 5.88043 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.88043 width=0.03000 (5.86543 - 5.89543)
Moving to starting dac 5.86543
setting magnet DAC
current  : 5.241086
requested: 5.865430
Delta Dac: 0.624344
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86543 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.0775925722015. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86543, em= 5.89543, stm= 0.0015
calculated step values: start=5.86543, end=5.89543, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.865430
requested: 5.865430
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86543 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.865430
requested: 5.867009
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86700894737 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867009
requested: 5.868588
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86858789474 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868588
requested: 5.870167
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87016684211 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870167
requested: 5.871746
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87174578947 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871746
requested: 5.873325
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87332473684 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873325
requested: 5.874904
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87490368421 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874904
requested: 5.876483
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87648263158 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876483
requested: 5.878062
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87806157895 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878062
requested: 5.879641
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87964052632 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879641
requested: 5.881219
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88121947368 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881219
requested: 5.882798
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88279842105 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882798
requested: 5.884377
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88437736842 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884377
requested: 5.885956
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88595631579 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885956
requested: 5.887535
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88753526316 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887535
requested: 5.889114
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88911421053 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889114
requested: 5.890693
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89069315789 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890693
requested: 5.892272
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89227210526 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892272
requested: 5.893851
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89385105263 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.893851
requested: 5.895430
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89543 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8729750901803612, 5.8804300000000005, 5.8878849098196397], [25.216952712541609, 34.239039986437021, 25.215417520500271], 5.8780552505010029, 34.239039986437021)
Failed to find a valid peak. No peak greater than 1.0. max = 0.671298999922
Failed to find a valid peak. No peak greater than 1.0. max = 0.0168617268405
new center pos Detector(H1) (Ar40) @ 5.88043
GetHighVoltage ===>> 4500
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.88043
update mftable H1 Ar40 5.88043 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.895430
requested: 5.880430
Delta Dac: 0.015000
Checking detector protection. dv=0.01500
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88043 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.671298999922
Failed to find a valid peak. No peak greater than 1.0. max = 0.0168617268405
flush and close file /Users/jan/PychronDev/data/isotopes/22/7191f1-3da5-453e-bcf6-54b721d8787d.h5
finished measure script
executed snippet estimated_duration=568.532928, duration=634.784081936
jan_unknown400_120.py completed successfully
Measurement Finished
16:56:34 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
16:56:34 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=2
16:56:34 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.367333889008
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
16:56:34 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for PM41= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5179075088 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5179075088
close session 5179075088
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5009112240
MassSpec Database Version: 16.0
close session 5009112240
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 65714
setting aliquot to 1
setting step to B
setting uuid to 227191f1-3da5-453e-bcf6-54b721d8787d
setting irradpos to 65714
setting extract_device to Fusions CO2
setting tray to 
setting position to 80
setting power_requested to 5.0
setting extract_value to 5.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NM-290
setting level to M
setting irradiation_level to M
setting sample to Huckleberry Ridge
setting material to 
setting project to 
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope PM41 H2
add baseline dbdet= PM41. original det= H2
get baseline data PM41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x133111790> len t=120
baseline PM41. v=-0.199470362883, e=0.00519836408089
get signal data PM41 H2
Get data signal PM41 0.02+/-0.07 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x133111850> len t=120
baseline Ar40. v=0.102728702401, e=0.00312455366444
get signal data Ar40 H1
Get data signal Ar40 31.947+/-0.012 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x133111cd0> len t=120
baseline Ar39. v=-0.0571333226761, e=0.00412983295399
get signal data Ar39 AX
Get data signal Ar39 75.428+/-0.014 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x133111e90> len t=120
baseline Ar38. v=-0.0228584386401, e=0.00193546084593
get signal data Ar38 L1
Get data signal Ar38 0.9533+/-0.0024 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x133a51090> len t=120
baseline Ar37. v=-0.0228570038194, e=0.00428466908752
get signal data Ar37 L2
Get data signal Ar37 0.783+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x133a51250> len t=120
baseline Ar36. v=2.63596265618e-05, e=5.54111103189e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00597+/-0.00020 len t=400
65714-01B added analysis time 0.462673902512s
analysis added to mass spec database
mass spec save time= 0.477
persistence save - dvc
================= post measurement started
create new session 4971190320
close session 4971190320
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.671298999922
Failed to find a valid peak. No peak greater than 1.0. max = 0.0168617268405
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 14-01B.json
add to repo msg=modified - 14-01B.dat.json
add to repo msg=modified - 14-01B.blan.json
add to repo msg=modified - 14-01B.inte.json
add to repo msg=modified - 14-01B.icfa.json
add to repo msg=modified - 14-01B.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/657/tags/14-01B.tags.json
add to repo msg=modified - 14-01B.peak.json
add to repo msg=modified - 14-01B.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/laboratory/657/monitor/14-01B.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 14-01B.inte.json
add to repo msg=modified - 14-01B.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 14-01B.blan.json
commit message=<BLANKS> preceding bu-FC-J-7936
add to repo msg=modified - 14-01B.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13e5d5110>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4971190320
add association laboratory
get identifier "65714"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1407d0310>
close session 4971190320
================= post measurement finished
16:56:51 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
16:56:51 -- ******* Post Run Check Passed *******
16:56:51 -- Automated run 65714-01B success duration: 730.101 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=2
update duration runid=65714-01B, duration=730.100981951, md5=a5238c40
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000516891479492
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.09944152832e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.98430633545e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000164031982422
executed snippet estimated_duration=0.0, duration=0.00958204269409
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00016188621521
executed snippet estimated_duration=4.0, duration=0.00564098358154
Script duration 556.0
Run total estimated duration= 557.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.70363616943e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=9.29832458496e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=9.3936920166e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=5.88893890381e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=7.89165496826e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000124931335449
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.60419464111e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000101089477539
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000101804733276
executed snippet estimated_duration=250.0, duration=0.0266630649567
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 806.0
Run total estimated duration= 807.000
nruns=2 before=0.0, run_dur=1364.0, btw=60.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/Load1800.rem.txt
/Users/jan/PychronDev/experiments/rem/Load1800.ex.txt
doing event level: 3
